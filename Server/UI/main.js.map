{"version":3,"sources":["ws (ignored)","./src/app/Pages/reset-confirm/reset-confirm.component.ts","./src/app/Pages/reset-confirm/reset-confirm.component.html","./src/app/Services/friend.service.ts","./src/app/Pages/about/about.component.ts","./src/app/Pages/about/about.component.html","./src/app/Pages/search/search.component.html","./src/app/Pages/search/search.component.ts","./src/app/Services/token-interceptor.service.ts","./src/environments/environment.ts","./src/app/Services/search.service.ts","./src/app/Pages/news/news.component.ts","./src/app/Pages/news/news.component.html","./src/app/Pages/edit-profile/edit-profile.component.ts","./src/app/Pages/edit-profile/edit-profile.component.html","./src/app/Services/reset-confirm.service.ts","./src/app/Services/test.service.ts","./src/app/Pages/home/home.component.ts","./src/app/Pages/home/home.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/Services/reaction.service.ts","./src/app/Services/post.service.ts","./src/app/Pages/register/register.component.ts","./src/app/Pages/register/register.component.html","./src/app/Pages/login/login.component.ts","./src/app/Pages/login/login.component.html","./src/app/Services/websocket.service.ts","./src/app/Services/count.service.ts","./src/app/Services/auth.service.ts","./src/app/app.module.ts","./src/app/Blocks/test/test.component.ts","./src/app/Blocks/test/test.component.html","./src/app/Services/about.service.ts","./src/app/Pages/chat/chat.component.ts","./src/app/Pages/chat/chat.component.html","./src/app/Services/profile.service.ts","./src/app/Pages/forgot-password/forgot-password.component.ts","./src/app/Pages/forgot-password/forgot-password.component.html","./src/app/Services/forgot-password.service.ts","./src/app/Pages/chat-room/chat-room.component.ts","./src/app/Pages/chat-room/chat-room.component.html","./src/app/Blocks/side-nav/side-nav.component.html","./src/app/Blocks/side-nav/side-nav.component.ts","./src/app/Blocks/toolbar/toolbar.component.ts","./src/app/Blocks/toolbar/toolbar.component.html","./src/app/Services/comment.service.ts","./src/app/Guard/auth.guard.ts","./src/app/Pages/profile/profile.component.ts","./src/app/Pages/profile/profile.component.html","./src/app/app-routing.module.ts","./src/app/Pages/friend/friend.component.ts","./src/app/Pages/friend/friend.component.html","./src/app/Services/news.service.ts","./src/app/Services/chat.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["/* (ignored) */","import { Component, OnInit } from '@angular/core';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { FormGroup, FormBuilder, FormControl, Validators } from \"@angular/forms\";\r\nimport { Router } from \"@angular/router\";\r\n\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport {ResetConfirmService} from '../../Services/reset-confirm.service';\r\n\r\n@Component({\r\n  selector: 'app-reset-confirm',\r\n  templateUrl: './reset-confirm.component.html',\r\n  styleUrls: ['./reset-confirm.component.css']\r\n})\r\nexport class ResetConfirmComponent implements OnInit {\r\n  alertError: boolean = false;\r\n  errCatching = '';\r\n  token:any;\r\n  userData = {\r\n  'email': ''\r\n  };\r\n\r\n  constructor(\r\n    private _rsCf: ResetConfirmService,\r\n    private _router: Router,\r\n    private _activatedRoute: ActivatedRoute,\r\n    private _formBuilder: FormBuilder\r\n  ) { }\r\n\r\n  ResetPasswordForm: FormGroup = this._formBuilder.group({\r\n      password: new FormControl('', [Validators.required, Validators.minLength(6)])\r\n    });\r\n\r\n    ngOnInit() {\r\n      this._activatedRoute.paramMap.subscribe(params => {\r\n      this.token = params.get('token');\r\n      console.log(this.token);\r\n\r\n       this._rsCf.getResetConfirm(this.token)\r\n        .subscribe(\r\n          res => {\r\n          console.log(res);\r\n        },\r\n          err => {\r\n            console.log(err);\r\n          }\r\n        )\r\n      });\r\n\r\n    }\r\n\r\n  onResetPassword() {\r\n    if (!this.ResetPasswordForm.valid) {\r\n      return;\r\n    }\r\n    this.ResetMyPassword();\r\n  }\r\n\r\n  ResetMyPassword(){\r\n    this.userData = this.ResetPasswordForm.value;\r\n    this._rsCf.PostNewPassword(this.token, this.userData)\r\n    .subscribe(\r\n      res => {\r\n        console.log(res);\r\n        this.alertError = true;\r\n        this.errCatching = res;\r\n      },\r\n      err => {\r\n        console.log(err);\r\n        this.alertError = true;\r\n        this.errCatching = err.error;\r\n        console.log(this.errCatching);\r\n      }\r\n    )\r\n  }\r\n\r\n}\r\n","<mat-card>\n    <mat-card-content>\n      <div class=\"header\" header>\n        <!-- Alert login -->\n        <div class=\"alert alert-info alert-dismissable\" *ngIf=\"alertError\">\n          <a class=\"panel-close close\" data-dismiss=\"alert\">×</a>\n          <i class=\"fa fa-coffee\"></i>\n          {{errCatching}}\n        </div>\n\n        <P>Nhập mật khẩu mới </P>\n      </div>\n      <form (ngSubmit)=\"onResetPassword()\" name=\"ResetPasswordForm\" [formGroup]=\"ResetPasswordForm\">\n        <div>\n          <mat-form-field class=\"full-width\" appearance=\"outline\">\n            <mat-label>Password</mat-label>\n            <input formControlName=\"password\" matInput required />\n        <mat-error *ngIf=\"!ResetPasswordForm.controls['password'].valid\">\n            Password is required\n          </mat-error>\n        </mat-form-field>\n        </div>\n\n        <button mat-flat-button color=\"primary\">Xác nhận</button>\n      </form>\n    </mat-card-content>\n  </mat-card>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from \"@angular/router\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FriendService {\n\n  readonly _getFriendRequestUrl = \"https://the-social-network1.herokuapp.com/api/Friend/getAllFriendRequest\";\n  readonly _sendFriendRequestUrl = \"https://the-social-network1.herokuapp.com/api/Friend/FriendRequest/\";\n  readonly _getFriendUrl = \"https://the-social-network1.herokuapp.com/api/Friend/getAllFriend\";\n  readonly _acceptFriendUrl = \"https://the-social-network1.herokuapp.com/api/Friend/AcceptFriend/\";\n  readonly _deleteFriendUrl = \"https://the-social-network1.herokuapp.com/api/Friend/DeleteFriendRequest/\";\n\n  readonly _unFriendUrl = \"https://the-social-network1.herokuapp.com/api/Friend/DeleteFriend/\";\n  readonly _getProfileFriend = \"https://the-social-network1.herokuapp.com/api/Friend/getProfileFriend/\";\n\n  constructor(\n    private http: HttpClient,\n    private _router: Router\n  ) { }\n\n  GetAllFriendRequest(){\n    return this.http.get<any>(this._getFriendRequestUrl);\n  }\n\n  SendFriendRequest(userId: any, anything: any){\n    return this.http.post<any>(this._sendFriendRequestUrl + userId,anything);\n  }\n\n  GetAllFriend(){\n    return this.http.get<any>(this._getFriendUrl);\n  }\n\n  GetProfileFriend(userId: any){\n    return this.http.get<any>(this._getProfileFriend + userId);\n  }\n\n  AcceptFriendRequest(friendQueue_ID: any, anything:any){\n    return this.http.post<any>(this._acceptFriendUrl + friendQueue_ID, anything);\n  }\n\n  DeleteFriendRequest(friendQueue_ID: any, anything:any){\n    return this.http.post<any>(this._deleteFriendUrl + friendQueue_ID, anything);\n  }\n\n  UnFriend(friendId:any,anything:any){\n    return this.http.post<any>(this._unFriendUrl + friendId, anything);\n  }\n\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl, Validators } from \"@angular/forms\";\nimport { MatFormFieldModule } from '@angular/material/form-field';\n\nimport { AboutService } from \"../../Services/about.service\";\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor(\n    private _formBuilder: FormBuilder,\n    private _about: AboutService,\n  ) { }\n\n  EditForm: FormGroup = this._formBuilder.group({\n    name: \"\",\n    phone: [\"\"],\n    address: [\"\"],\n    DoB: [\"\"],\n    description: [\"\"],\n    gender: [\"\"]\n  })\n\n  ngOnInit(): void {\n  }\n\n  EditProfile(){\n    console.log(this.EditForm.value)\n    this._about.EditProfile(this.EditForm.value).subscribe(\n      res => console.log(res),\n      err => console.log(err)\n    )\n  }\n\n}\n","<div class=\"container\">\n  <form class=\"form-group\" [formGroup]=\"EditForm\" (ngSubmit)=\"EditProfile()\">\n    <label for=\"editName\">Sua ten</label>\n    <input class=\"form-control\" formControlName=\"name\" type=\"text\" name=\"editName\" value=\"\">\n\n    <label for=\"editPhone\">Sua sdt</label>\n    <input class=\"form-control\"formControlName=\"phone\" type=\"text\" name=\"editPhone\" value=\"\">\n\n    <label for=\"editAddress\">Sua dia chi</label>\n    <input class=\"form-control\" type=\"text\" formControlName=\"address\" name=\"editAddress\" value=\"\">\n\n    <label for=\"editDoB\">Sua ngay sinh</label>\n    <input class=\"form-control\" type=\"text\" formControlName=\"DoB\" name=\"editDoB\" value=\"\">\n\n    <label for=\"editDescription\">Sua mo ta</label>\n    <input class=\"form-control\" type=\"text\" formControlName=\"description\" name=\"editDescription\" value=\"\">\n\n    <label for=\"editGender\">Sua gioi tinh</label>\n    <input class=\"form-control\" type=\"text\" formControlName=\"gender\" name=\"editGender\" value=\"\">\n\n    <button type=\"submit\" mat-flat-button style=\"background-color:green; color:white; margin-top: 20px; width:100%\" name=\"buttonSubmit\">Gửi</button>\n  </form>\n</div>\n","<mat-card class=\"example-card\">\n  <span *ngIf=\"!isSuccess\">Không tìm thấy người dùng nào</span>\n\n  <div class=\"ShowUser\" *ngIf=\"isSuccess\" >\n    <mat-card-header *ngFor=\"let user of searchResult\" routerLink=\"/profile/{{user.User_ID}}\">\n      <img mat-card-avatar class=\"example-header-image\" src=\"https://the-social-network1.herokuapp.com/public/upload/{{user.avatar}}\"/>\n      <mat-card-title>{{user.name}}</mat-card-title>\n      <mat-card-subtitle>{{user.description}}</mat-card-subtitle>\n    </mat-card-header>\n\n  </div>\n</mat-card>\n","import { Component, OnInit } from '@angular/core';\nimport { SearchService } from \"../../Services/search.service\";\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.css']\n})\nexport class SearchComponent implements OnInit {\n\n  searchResult: any = [{\n    DoB: String,\n    address: String,\n    avatar: String,\n    cover: String,\n    description: String,\n    email: String,\n    \"gender\": \"\",\n    name: String,\n    phone: String\n  }];\n\n  isSuccess: Boolean = false;\n\n  constructor(\n    private _search: SearchService\n  ) { }\n\n  ngOnInit(): void {\n    this._search.searchResult.subscribe(\n      result => {\n        this.searchResult = result\n        if(this.searchResult.length == 0){\n          this.isSuccess = false;\n        }else{\n          this.isSuccess = true;\n        }\n      }\n    )\n  }\n\n}\n","import { Injectable, Injector } from '@angular/core';\r\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest } from \"@angular/common/http\";\r\nimport { AuthService } from \"./auth.service\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TokenInterceptorService implements HttpInterceptor {\r\n\r\n  constructor(private injector: Injector) { }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler){\r\n    let authService = this.injector.get(AuthService);\r\n    let tokenizedReq = req.clone({\r\n      setHeaders: {\r\n        Authorization: `Bearer ${authService.getToken()}`\r\n      }\r\n    })\r\n    return next.handle(tokenizedReq)\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from \"@angular/router\";\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SearchService {\n\n  readonly _searchUrl = \"https://the-social-network1.herokuapp.com/api/SearchBarLoggedIn\";\n  readonly _searchNoLoginUrl = \"https://the-social-network1.herokuapp.com/api/SearchBarNoLogin\";\n  readonly _searchHistoriesUrl = \"https://the-social-network1.herokuapp.com/api/getSearchHistories\";\n\n  private searchInput = new BehaviorSubject(['Default message']);\n  searchResult = this.searchInput.asObservable();\n\n  constructor(\n    private http: HttpClient,\n    private _router: Router\n  ) { }\n\n  Search(search: any){\n    return this.http.post<any>(this._searchUrl, search)\n  }\n\n  SearchNoLogin(search: any){\n    return this.http.post<any>(this._searchNoLoginUrl, search)\n  }\n\n  getSearchHistories(){\n    return this.http.get<any>(this._searchHistoriesUrl)\n  }\n\n  sendResult(result: any) {\n    this.searchInput.next(result);\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { Router } from \"@angular/router\";\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { FormGroup, FormBuilder, FormControl, Validators } from \"@angular/forms\";\r\n\r\nimport { NewsService } from \"../../Services/news.service\";\r\nimport { AuthService } from \"../../Services/auth.service\";\r\nimport { ProfileService } from \"../../Services/profile.service\";\r\n\r\n@Component({\r\n  selector: 'app-news',\r\n  templateUrl: './news.component.html',\r\n  styleUrls: ['./news.component.css']\r\n})\r\nexport class NewsComponent implements OnInit {\r\n\r\n  isAdmin: Boolean = false;\r\n\r\n  newsNoImage = {\r\n    \"content\": \"\"\r\n  }\r\n\r\n  getPost = [{\r\n    UserName: String,\r\n    Post_ID: String,\r\n    UserAvatar: String,\r\n    title: String,\r\n    content: String,\r\n    images: String,\r\n    Comments: [{\r\n      UserName: String,\r\n      avatar: String,\r\n      content: String\r\n    }],\r\n    isLiked: Boolean,\r\n    like: 0,\r\n    date: Date\r\n  }]\r\n\r\n  userProfile = {\r\n    userId: String,\r\n    name: String,\r\n    avatar: String\r\n  };\r\n\r\n\r\n  constructor(\r\n    private _formBuilder: FormBuilder,\r\n    private _router: Router,\r\n    private _activatedRoute: ActivatedRoute,\r\n    public _auth: AuthService,\r\n    private _news: NewsService,\r\n    private _profile: ProfileService\r\n  ) { }\r\n\r\n  NewsForm: FormGroup = this._formBuilder.group({\r\n    content: new FormControl('', [Validators.required]),\r\n    images: new FormControl('', [Validators.required])\r\n  })\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.getAdminProfile()\r\n    this.CheckAdmin()\r\n    this.getAllNews();\r\n  }\r\n\r\n  onAddNewNews(){\r\n    if (!this.NewsForm.valid) {\r\n      return;\r\n    }\r\n    this.AddNewNews();\r\n  }\r\n\r\n  AddNewNews(){\r\n    const NewsFormData = new FormData();\r\n    NewsFormData.append('images',this.NewsForm.value.images);\r\n    NewsFormData.append('content',this.NewsForm.value.content);\r\n    if(this.isAdmin){\r\n      this._news.AddNewNews(NewsFormData)\r\n        .subscribe(\r\n          res => this.ngOnInit(),\r\n          err => this.ngOnInit()\r\n        )\r\n    }\r\n  }\r\n\r\n\r\n  getAllNews(){\r\n    this._news.getAllNews()\r\n      .subscribe(\r\n        res => this.getPost = res,\r\n        err => console.log(err)\r\n      )\r\n  }\r\n\r\n  getAdminProfile(){\r\n    this._profile.getToolbarProfile()\r\n      .subscribe(\r\n        res => this.userProfile = res,\r\n        err => console.log(err)\r\n      )\r\n  }\r\n\r\n  CheckAdmin(){\r\n    if(this._auth.loggedIn()){\r\n      this._news.CheckAdmin()\r\n      .subscribe(\r\n        res => this.isAdmin = res,\r\n        err => console.log(err)\r\n      )\r\n    }\r\n  }\r\n\r\n  NewsNoImage(){\r\n    this._news.AddNewNewsNoImage(this.newsNoImage)\r\n      .subscribe(\r\n        res => {\r\n          this.ngOnInit()\r\n          this.newsNoImage.content = \"\"\r\n        },\r\n        err => {\r\n          this.ngOnInit()\r\n          this.newsNoImage.content = \"\"\r\n        }\r\n      )\r\n  }\r\n\r\n  UploadImages(event: any){\r\n    const file = event.target.files[0];\r\n      this.NewsForm.patchValue({\r\n        images: file\r\n      })\r\n  }\r\n}\r\n","<mat-tab-group mat-align-tabs=\"center\" *ngIf=\"isAdmin\">\r\n  <mat-tab label=\"Đăng bài viết\">\r\n    <form class=\"form-group\">\r\n      <img src=\"https://the-social-network1.herokuapp.com/public/upload/{{userProfile.avatar}} \" mat-card-avatar >\r\n      <mat-form-field class=\"full-width\" appearance=\"outline\" style=\"margin-top:10px;margin-left:10px;width:80%\">\r\n        <mat-label>Bạn muốn chia sẻ điều gì?</mat-label>\r\n          <textarea\r\n              class=\"CreatePost\"\r\n              matInput\r\n              name=\"content\"\r\n              placeholder=\"Bạn muốn chia sẻ điều gì?\"\r\n              [(ngModel)]=\"newsNoImage.content\" rows=\"2\" cols=\"80\">\r\n          </textarea>\r\n      </mat-form-field>\r\n      <a mat-raised-button class=\"UploadImages\"></a>\r\n      <br />\r\n      <button mat-flat-button class=\"submitPostBtn\" (click)=\"NewsNoImage()\"> Chia sẻ </button>\r\n    </form>\r\n  </mat-tab>\r\n\r\n  <mat-tab label=\"Đăng ảnh\">\r\n    <form (ngSubmit)=\"onAddNewNews()\" name=\"NewsForm\" [formGroup]=\"NewsForm\">\r\n      <img src=\"https://the-social-network1.herokuapp.com/public/upload/{{userProfile.avatar}} \" mat-card-avatar >\r\n      <mat-form-field class=\"full-width\" appearance=\"outline\" style=\"margin-top:10px;margin-left:10px;width:75%\">\r\n        <mat-label>Bạn muốn chia sẻ điều gì?</mat-label>\r\n          <textarea\r\n            class=\"CreatePost\"\r\n            formControlName=\"content\"\r\n            matInput\r\n            placeholder=\"Bạn muốn chia sẻ điều gì?\">\r\n          </textarea>\r\n      </mat-form-field>\r\n      <a mat-raised-button class=\"UploadImages\">\r\n        <label mat-button for=\"UploadImages\" ><mat-icon style=\"margin: 5px 5px; size:50px 50px; \" >image</mat-icon></label>\r\n        <input\r\n          id=\"UploadImages\" type=\"file\" (change)= \"UploadImages($event)\" hidden=true;\r\n        />\r\n      </a>\r\n      <br />\r\n      <button mat-flat-button type=\"submit\" [disabled]=\"!NewsForm.valid\" class=\"submitPostBtn\"> Chia sẻ </button>\r\n    </form>\r\n  </mat-tab>\r\n</mat-tab-group>\r\n\r\n<div class=\"container\">\r\n  <div class=\"Post\" *ngFor=\"let post of getPost\">\r\n    <mat-card class=\"example-card\">\r\n    <mat-card-header>\r\n      <img mat-card-avatar class=\"example-header-image\" src=\"https://the-social-network1.herokuapp.com/public/upload/{{post.UserAvatar}}\"/>\r\n      <mat-card-title>{{post.UserName}}</mat-card-title>\r\n      <mat-card-subtitle>{{post.date}}</mat-card-subtitle>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <textarea autosize name=\"name\" class=\"textAreaPost\" disabled>{{post.content}}</textarea>\r\n    </mat-card-content>\r\n    <img mat-card-image *ngIf=\"post.images != null\" src=\"https://the-social-network1.herokuapp.com/public/upload/{{post.images}}\" >\r\n  </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { FormGroup, FormBuilder, FormControl, Validators } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\n\nimport { AuthService } from \"../../Services/auth.service\";\n\n@Component({\n  selector: 'app-edit-profile',\n  templateUrl: './edit-profile.component.html',\n  styleUrls: ['./edit-profile.component.css']\n})\nexport class EditProfileComponent implements OnInit {\n\n      alertError: boolean = false;\n      errCatching = '';\n\n      UserData = {\n      'password': '',\n      'confirmPassword': ''\n      };\n\n      hide: boolean = true;\n\n      constructor(\n        private _auth: AuthService,\n        private _router: Router,\n        private _formBuilder: FormBuilder\n      ) { }\n\n      ngOnInit(): void {\n      }\n\n      changePasswordForm: FormGroup = this._formBuilder.group({\n          password: new FormControl('', [Validators.required, Validators.minLength(6)]),\n          confirmPassword: new FormControl('', [Validators.required, Validators.minLength(6)])\n        });\n\n        onChangePassword() {\n          if (!this.changePasswordForm.valid) {\n            return;\n          }\n          this.registerUser();\n        }\n\n        registerUser(){\n          if(this.changePasswordForm.value.password !== this.changePasswordForm.value.confirmPassword){\n            this.alertError = true;\n            this.errCatching = \"Mật khẩu không trùng khớp\";\n          }else{\n            this.UserData = this.changePasswordForm.value;\n            this._auth.changePassword(this.UserData)\n            .subscribe(\n              res => {\n                console.log(res);\n                this._router.navigate(['/']);\n              },\n              err => {\n                console.log(err);\n                this._router.navigate(['/']);\n            }\n            )\n          }\n        }\n}\n","<mat-card>\n    <mat-card-content>\n      <div class=\"header\" header>\n        <!-- Alert login -->\n        <div class=\"alert alert-info alert-dismissable\" *ngIf=\"alertError\">\n          <a class=\"panel-close close\" data-dismiss=\"alert\">×</a>\n          <i class=\"fa fa-coffee\"></i>\n          {{errCatching}}\n        </div>\n\n        <P>Đổi mật khẩu</P>\n      </div>\n      <form (ngSubmit)=\"onChangePassword()\" name=\"changePasswordForm\" [formGroup]=\"changePasswordForm\">\n        <div>\n          <mat-form-field class=\"full-width\" appearance=\"outline\">\n            <mat-label>Mật khẩu</mat-label>\n            <input formControlName=\"password\" matInput [type]=\" hide ? 'password' : 'text'\" required />\n            <button  mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide Password'\"\n            [attr.aria-pressed]=\"hide\">\n            <mat-icon>\n                {{hide ? 'visibility_off' : 'visibility'}}\n            </mat-icon>\n        </button>\n        <mat-error *ngIf=\"!changePasswordForm.controls['password'].valid\">\n            Mật khẩu cần có ít nhất 6 ký tự\n          </mat-error>\n        </mat-form-field>\n        </div>\n        <div>\n          <mat-form-field class=\"full-width\" appearance=\"outline\">\n            <mat-label>Xác nhận mật khẩu</mat-label>\n            <input formControlName=\"confirmPassword\" matInput [type]=\" hide ? 'password' : 'text'\" required />\n            <button  mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide Password'\"\n            [attr.aria-pressed]=\"hide\">\n            <mat-icon>\n                {{hide ? 'visibility_off' : 'visibility'}}\n            </mat-icon>\n        </button>\n        <mat-error *ngIf=\"!changePasswordForm.controls['confirmPassword'].valid\">\n            Mật khẩu cần có ít nhất 6 ký tự\n          </mat-error>\n        </mat-form-field>\n        </div>\n        <button mat-flat-button color=\"primary\" style=\"background-color:green; color:white;\" >Xác nhận</button>\n      </form>\n    </mat-card-content>\n  </mat-card>\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ResetConfirmService {\r\n\r\n  readonly _baseResetConfirmUrl = \"https://the-social-network1.herokuapp.com/reset-confirm/\";\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n\r\n  getResetConfirm(token:any){\r\n    return this.http.get<any>(this._baseResetConfirmUrl + token);\r\n  }\r\n  PostNewPassword(token:any, user: any){\r\n    return this.http.post<any>(this._baseResetConfirmUrl + token, user);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from \"@angular/router\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TestService {\n\n  readonly _PostTestUrl = \"https://the-social-network1.herokuapp.com/fortest\";\n\n  constructor(\n    private http: HttpClient,\n    private _router: Router\n  ) { }\n\n  PostTest(nature: any){\n    return this.http.post<any>(this._PostTestUrl, nature)\n  }\n}\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { Router } from \"@angular/router\";\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { FormGroup, FormBuilder, FormControl, Validators } from \"@angular/forms\";\r\n\r\nimport { ProfileService } from \"../../Services/profile.service\";\r\nimport { PostService } from \"../../Services/post.service\";\r\nimport { AuthService } from \"../../Services/auth.service\";\r\nimport { CommentService } from \"../../Services/comment.service\";\r\nimport { FriendService } from \"../../Services/friend.service\";\r\nimport { ReactionService } from \"../../Services/reaction.service\";\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  alertError: boolean = false;\r\n  errCatching = '';\r\n\r\n  openComment: Boolean = true;\r\n\r\n  liked: boolean = true;\r\n  likedColor:String = \"green\";\r\n\r\n  userProfile = {\r\n    userId: String,\r\n    name: String,\r\n    avatar: String\r\n  };\r\n\r\n  getPost = [{\r\n    UserName: String,\r\n    Post_ID: String,\r\n    UserAvatar: String,\r\n    title: String,\r\n    content: String,\r\n    images: String,\r\n    Comments: [{\r\n      UserName: String,\r\n      avatar: String,\r\n      content: String\r\n    }],\r\n    isLiked: Boolean,\r\n    like: 0,\r\n    date: Date\r\n  }]\r\n\r\n  CommentForm: FormGroup = this._formBuilder.group({\r\n    content: new FormControl('', [Validators.required])\r\n  })\r\n\r\n  constructor(\r\n    private _formBuilder: FormBuilder,\r\n    private _profile: ProfileService,\r\n    private _post: PostService,\r\n    private _router: Router,\r\n    private _activatedRoute: ActivatedRoute,\r\n    public _auth: AuthService,\r\n    private _comment: CommentService,\r\n    private _friend: FriendService,\r\n    private _reaction: ReactionService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this._post.RenderHomePage().subscribe(\r\n      res=>{\r\n        this.getPost = res;\r\n        this.getPost.forEach(post => {\r\n          this._reaction.CheckLiked(post.Post_ID).subscribe(\r\n            res => post.isLiked = res,\r\n            err => console.log(err)\r\n          )\r\n          this._reaction.CountLike(post.Post_ID).subscribe(\r\n            res => post.like = res,\r\n            err => console.log(err)\r\n          )\r\n          this._comment.getAllComment(post.Post_ID).subscribe(\r\n            res => post.Comments =res,\r\n            err => console.log(err)\r\n          )\r\n        });\r\n        //console.log(this.getPost)\r\n      },\r\n      err=>{\r\n        console.log(err)\r\n      }\r\n    )\r\n\r\n\r\n\r\n    this.refreshToolbar();\r\n  }\r\n\r\n  refreshToolbar(){\r\n    this._profile.getToolbarProfile()\r\n      .subscribe(\r\n        res => {\r\n          this.userProfile = res;\r\n        },\r\n        err=>{\r\n          console.log(err);\r\n        }\r\n      )\r\n  }\r\n\r\n  LikedColorChange(){\r\n    this.liked = !this.liked;\r\n    if(this.liked == true){\r\n      this.likedColor = \"basic\"\r\n    }\r\n    else{\r\n      this.likedColor = \"primary\"\r\n    }\r\n  }\r\n\r\n  DeletePost(postId: any){\r\n    this._post.DeletePost(postId)\r\n      .subscribe(\r\n        res => {\r\n          console.log(res);\r\n        },\r\n        err => {\r\n          console.log(err);\r\n        }\r\n      )\r\n  }\r\n\r\n  onAddNewComment(PostId: any){\r\n    if (!this.CommentForm.valid) {\r\n      return;\r\n    }\r\n    this.AddNewComment(PostId);\r\n  }\r\n\r\n  AddNewComment(PostId: any){\r\n    this._comment.AddNewComment(PostId, this.CommentForm.value)\r\n    .subscribe(\r\n      res => {\r\n        console.log(res);\r\n      },\r\n      err => {\r\n        console.log(err);\r\n        this.alertError = true;\r\n        this.errCatching = err.error;\r\n        console.log(this.errCatching);\r\n      }\r\n    )\r\n  }\r\n\r\n  LikePost(post: any){\r\n    post.isLiked = !post.isLiked;\r\n    post.like += 1;\r\n    this._reaction.Like(post.Post_ID).subscribe(\r\n      res => console.log(res),\r\n      err => console.log(err)\r\n    )\r\n  }\r\n\r\n  unLikePost(post: any){\r\n    post.isLiked = !post.isLiked;\r\n    post.like -= 1;\r\n    this._reaction.unLike(post.Post_ID).subscribe(\r\n      res => console.log(res),\r\n      err => console.log(err)\r\n    )\r\n  }\r\n\r\n}\r\n","<!-- POST -->\r\n<div class=\"Post\" *ngFor=\"let post of getPost\">\r\n  <mat-card class=\"example-card\">\r\n  <mat-card-header>\r\n    <img mat-card-avatar class=\"example-header-image\" src=\"https://the-social-network1.herokuapp.com/public/upload/{{post.UserAvatar}}\"/>\r\n    <mat-card-title>{{post.UserName}}</mat-card-title>\r\n    <mat-card-subtitle>{{post.date}}</mat-card-subtitle>\r\n    <button mat-button (click)=\"DeletePost(post.Post_ID)\" class=\"DeleteBtn\">X</button>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <textarea autosize disabled cols=\"80\">{{post.content}}</textarea>\r\n  </mat-card-content>\r\n  <img mat-card-image *ngIf=\"post.images != null\" src=\"https://the-social-network1.herokuapp.com/public/upload/{{post.images}}\" >\r\n  <mat-card-actions>\r\n    <div class=\"PostLayoutLikeCount\">\r\n      <mat-icon>favorite</mat-icon>{{post.like}}\r\n      <mat-icon>comment</mat-icon>\r\n    </div>\r\n    <button mat-button style=\"color:green\" *ngIf=\"post.isLiked\" (click)=\"unLikePost(post)\">Thích</button>\r\n    <button mat-button *ngIf=\"!post.isLiked\" (click)=\"LikePost(post)\">Thích</button>\r\n\r\n    <button mat-button (click)=\"openComment = !openComment\">Bình luận</button>\r\n  </mat-card-actions>\r\n  <mat-card-actions>\r\n  <div class=\"comment\" [hidden] = false>\r\n    <div class=\"comment\" *ngFor = \"let comment of post.Comments\" style=\"padding: 10px 10px; margin-top:10px; margin-bottom:10px;  \">\r\n      <div class=\"row\">\r\n        <div class=\"col-sm-1\">\r\n          <img mat-card-avatar src=\"https://the-social-network1.herokuapp.com/public/upload/{{comment.avatar}}\">\r\n        </div>\r\n        <div class=\"col-sm-11\">\r\n          <div class=\"rightCommentLayout\">\r\n            <div class=\"rightTopCommentLayout\">\r\n              <span style=\"font-size: 20px;font-weight: normal; padding: 10px 10px; margin-top:10px; margin-bottom:10px;\">{{comment.UserName}}</span><br>\r\n            </div>\r\n            <div class=\"rightBottomCommentLayout\">\r\n              <span style=\"font-size: 13px;font-weight: normal; padding: 0px 10px; margin-top:0px; margin-bottom:10px;\">{{comment.content}}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <form (ngSubmit)=\"onAddNewComment(post.Post_ID)\" name=\"CommentForm\" [formGroup]=\"CommentForm\">\r\n      <img src=\"https://the-social-network1.herokuapp.com/public/upload/{{userProfile.avatar}} \" mat-card-avatar >\r\n      <mat-form-field class=\"full-width\" style=\"margin-left:10px; margin-right:10px; width:65%\" >\r\n        <mat-label>Để lại bình luận...</mat-label>\r\n        <input matInput placeholder=\"Đợi chút, bức ảnh này...\" class=\"full-width\" formControlName=\"content\"/>\r\n      </mat-form-field>\r\n      <button mat-flat-button type=\"submit\" [disabled]=\"!CommentForm.valid\" class=\"commentSubmitBtn\"> Chia sẻ </button>\r\n    </form>\r\n  </div>\r\n  </mat-card-actions>\r\n  <mat-card-footer>\r\n\r\n  </mat-card-footer>\r\n</mat-card>\r\n</div>\r\n","import { Component } from '@angular/core';\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'UI';\r\n}\r\n","<!--Toolbar menu -->\r\n<app-toolbar> </app-toolbar>\r\n\r\n<app-side-nav> </app-side-nav>\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from \"@angular/router\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ReactionService {\n  readonly _likeUrl = \"https://the-social-network1.herokuapp.com/api/Like/like/\";\n  readonly _unLikeUrl = \"https://the-social-network1.herokuapp.com/api/Like/unLike/\";\n  readonly _checkLikedUrl = \"https://the-social-network1.herokuapp.com/api/Like/CheckLiked/\";\n  readonly _countLikedUrl = \"https://the-social-network1.herokuapp.com/api/Like/CountLike/\";\n\n  constructor(\n    private http: HttpClient,\n    private _router: Router\n  ) { }\n\n  CountLike(postId: any){\n    return this.http.get<any>(this._countLikedUrl + postId)\n  }\n\n  CheckLiked(postId: any){\n    return this.http.get<any>(this._checkLikedUrl + postId)\n  }\n\n  Like(postId: any){\n    return this.http.get<any>(this._likeUrl + postId)\n  }\n\n  unLike(postId: any){\n    return this.http.get<any>(this._unLikeUrl + postId)\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from \"@angular/router\";\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class PostService {\n\n  readonly _addPostUrl = \"https://the-social-network1.herokuapp.com/api/Post/new/\";\n  readonly _addPostNoImageUrl = \"https://the-social-network1.herokuapp.com/api/Post/new/noImage/\";\n  readonly _deletePostUrl = \"https://the-social-network1.herokuapp.com/api/Post/delete/\"\n  readonly _getPostUrl = \"https://the-social-network1.herokuapp.com/api/Post/getPost/\"\n  readonly _homePageUrl = \"https://the-social-network1.herokuapp.com/api/home\"\n\n  constructor(\n    private http: HttpClient,\n    private _router: Router\n  ) { }\n\n  AddNewPost(userId: any, post: any){\n    return this.http.post<any>(this._addPostUrl + userId, post);\n  }\n\n  AddNewPostNoImage(userId:any, post:any){\n    return this.http.post<any>(this._addPostNoImageUrl + userId, post);\n  }\n\n  GetPost(userId: any){\n    return this.http.get<any>(this._getPostUrl + userId);\n  }\n\n  DeletePost(postId: any){\n    return this.http.delete<any>(this._deletePostUrl + postId)\n  }\n\n  RenderHomePage(){\n    return this.http.get<any>(this._homePageUrl)\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { FormGroup, FormBuilder, FormControl, Validators } from \"@angular/forms\";\r\nimport { Router } from \"@angular/router\";\r\n\r\nimport { AuthService } from \"../../Services/auth.service\";\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n    alertError: boolean = false;\r\n    errCatching = '';\r\n\r\n    registerUserData = {\r\n    'name': '',\r\n    'email': '',\r\n    'password': '',\r\n    'confirmPassword': ''\r\n    };\r\n\r\n    hide: boolean = true;\r\n\r\n    constructor(\r\n      private _auth: AuthService,\r\n      private _router: Router,\r\n      private _formBuilder: FormBuilder\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n    }\r\n\r\n    registerForm: FormGroup = this._formBuilder.group({\r\n        name : new FormControl('', [Validators.required]),\r\n        email : new FormControl('', [Validators.required, Validators.email]),\r\n        password: new FormControl('', [Validators.required, Validators.minLength(6)]),\r\n        confirmPassword: new FormControl('', [Validators.required, Validators.minLength(6)])\r\n      });\r\n\r\n      onRegister() {\r\n        if (!this.registerForm.valid) {\r\n          return;\r\n        }\r\n        this.registerUser();\r\n      }\r\n\r\n      registerUser(){\r\n        if(this.registerForm.value.password !== this.registerForm.value.confirmPassword){\r\n          this.alertError = true;\r\n          this.errCatching = \"Mật khẩu không trùng khớp\";\r\n        }else{\r\n          this.registerUserData = this.registerForm.value;\r\n          this._auth.registerUser(this.registerUserData)\r\n          .subscribe(\r\n            res => {\r\n              console.log(res);\r\n              localStorage.setItem('token', res.token);\r\n              window.location.replace('/')\r\n            },\r\n            err => {\r\n            console.log(err);\r\n            this.alertError = true;\r\n            this.errCatching = err.error;\r\n            console.log(this.errCatching);\r\n          }\r\n          )\r\n        }\r\n      }\r\n\r\n\r\n}\r\n","<mat-card>\r\n    <mat-card-content>\r\n      <div class=\"header\" header>\r\n        <!-- Alert login -->\r\n        <div class=\"alert alert-info alert-dismissable\" *ngIf=\"alertError\">\r\n          <a class=\"panel-close close\" data-dismiss=\"alert\">×</a>\r\n          <i class=\"fa fa-coffee\"></i>\r\n          {{errCatching}}\r\n        </div>\r\n\r\n        <P>Đăng ký tài khoản mới</P>\r\n      </div>\r\n      <form (ngSubmit)=\"onRegister()\" name=\"registerForm\" [formGroup]=\"registerForm\">\r\n\r\n        <div>\r\n          <mat-form-field class=\"full-width\" appearance=\"outline\">\r\n            <mat-label>Họ và tên</mat-label>\r\n            <input\r\n              formControlName=\"name\"\r\n              matInput\r\n              placeholder=\"Nguyễn Văn A\" required\r\n            />\r\n            <mat-error *ngIf=\"!registerForm.controls['name'].valid\">\r\n                Bạn cần nhập tên của mình\r\n              </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div class=\"emailInput\">\r\n          <mat-form-field class=\"full-width\" appearance=\"outline\">\r\n            <mat-label>Email</mat-label>\r\n            <input\r\n              formControlName=\"email\"\r\n              matInput\r\n              placeholder=\"vidu@gmail.com\" required\r\n            />\r\n            <mat-error *ngIf=\"!registerForm.controls['email'].valid\">\r\n                Bạn cần nhập địa chỉ email\r\n              </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div>\r\n          <mat-form-field class=\"full-width\" appearance=\"outline\">\r\n            <mat-label>Mật khẩu</mat-label>\r\n            <input formControlName=\"password\" matInput [type]=\" hide ? 'password' : 'text'\" required />\r\n            <button  mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide Password'\"\r\n            [attr.aria-pressed]=\"hide\">\r\n            <mat-icon>\r\n                {{hide ? 'visibility_off' : 'visibility'}}\r\n            </mat-icon>\r\n        </button>\r\n        <mat-error *ngIf=\"!registerForm.controls['password'].valid\">\r\n            Mật khẩu cần có ít nhất 6 ký tự\r\n          </mat-error>\r\n        </mat-form-field>\r\n        </div>\r\n        <div>\r\n          <mat-form-field class=\"full-width\" appearance=\"outline\">\r\n            <mat-label>Xác nhận mật khẩu</mat-label>\r\n            <input formControlName=\"confirmPassword\" matInput [type]=\" hide ? 'password' : 'text'\" required />\r\n            <button  mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide Password'\"\r\n            [attr.aria-pressed]=\"hide\">\r\n            <mat-icon>\r\n                {{hide ? 'visibility_off' : 'visibility'}}\r\n            </mat-icon>\r\n        </button>\r\n        <mat-error *ngIf=\"!registerForm.controls['confirmPassword'].valid\">\r\n            Mật khẩu cần có ít nhất 6 ký tự\r\n          </mat-error>\r\n        </mat-form-field>\r\n        </div>\r\n        <button mat-flat-button color=\"primary\" style=\"background-color:green; color:white;\" >Đăng ký</button>\r\n      </form>\r\n    </mat-card-content>\r\n  </mat-card>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { FormGroup, FormBuilder, FormControl, Validators } from \"@angular/forms\";\r\nimport { Router } from \"@angular/router\";\r\n\r\nimport { AuthService } from \"../../Services/auth.service\";\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n    alertError: boolean = false;\r\n    errCatching = '';\r\n\r\n    loginUserData = {\r\n    'email': '',\r\n    'password': ''\r\n    };\r\n\r\n    hide: boolean = true;\r\n\r\n    constructor(\r\n        private _formBuilder: FormBuilder,\r\n        private _auth: AuthService,\r\n        private _router: Router\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n    }\r\n\r\n    loginForm: FormGroup = this._formBuilder.group({\r\n        email : new FormControl('', [Validators.required, Validators.email]),\r\n        password: new FormControl('', [Validators.required, Validators.minLength(6)])\r\n      });\r\n\r\n      onLogin() {\r\n        if (!this.loginForm.valid) {\r\n          return;\r\n        }\r\n        this.loginUser();\r\n      }\r\n\r\n      loginUser(){\r\n      this.loginUserData = this.loginForm.value;\r\n      this._auth.loginUser(this.loginUserData)\r\n      .subscribe(\r\n        res => {\r\n          console.log(res);\r\n          localStorage.setItem('token', res.token);\r\n          window.location.replace('/')\r\n        },\r\n        err => {\r\n          console.log(err);\r\n          this.alertError = true;\r\n          this.errCatching = err.error;\r\n          console.log(this.errCatching);\r\n        }\r\n      )\r\n      }\r\n\r\n}\r\n","<mat-card>\r\n    <mat-card-content>\r\n      <div class=\"header\" header>\r\n        <!-- Alert login -->\r\n        <div class=\"alert alert-info alert-dismissable\" *ngIf=\"alertError\">\r\n          <a class=\"panel-close close\" data-dismiss=\"alert\">×</a>\r\n          <i class=\"fa fa-coffee\"></i>\r\n          {{errCatching}}\r\n        </div>\r\n\r\n        <P>Đăng nhập vào tài khoản của bạn</P>\r\n      </div>\r\n      <form (ngSubmit)=\"onLogin()\" name=\"loginForm\" [formGroup]=\"loginForm\">\r\n        <div class=\"emailInput\">\r\n          <mat-form-field class=\"full-width\" appearance=\"outline\">\r\n            <mat-label>Email</mat-label>\r\n            <input\r\n              formControlName=\"email\"\r\n              matInput\r\n              placeholder=\"vidu@gmail.com\" required\r\n            />\r\n            <mat-error *ngIf=\"!loginForm.controls['email'].valid\">\r\n                Bạn cần phải nhập tài khoản email\r\n              </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div>\r\n          <span>\r\n            <a class=\"text-link\" class=\"aLink\" routerLink=\"/forgot-password\">Quên mật khẩu?</a>\r\n          </span>\r\n          <mat-form-field class=\"full-width\" appearance=\"outline\">\r\n            <mat-label>Mật khẩu</mat-label>\r\n            <input formControlName=\"password\" matInput [type]=\" hide ? 'password' : 'text'\" required />\r\n            <button  mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide Password'\"\r\n            [attr.aria-pressed]=\"hide\">\r\n            <mat-icon>\r\n                {{hide ? 'visibility_off' : 'visibility'}}\r\n            </mat-icon>\r\n        </button>\r\n        <mat-error *ngIf=\"!loginForm.controls['password'].valid\">\r\n            Mật khẩu cần ít nhất 6 ký tự\r\n          </mat-error>\r\n        </mat-form-field>\r\n        </div>\r\n        <button mat-flat-button style=\"background-color:green; color:white;\" >Đăng nhập</button>\r\n      </form>\r\n    </mat-card-content>\r\n  </mat-card>\r\n","import { Injectable } from '@angular/core';\r\nimport * as io from 'socket.io-client'\r\nimport { Observable } from 'rxjs/Observable';\r\nimport * as Rx from 'rxjs/Rx';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class WebsocketService {\r\n\r\n  token: any = localStorage.getItem(\"token\");\r\n\r\n  chatSocket: any;\r\n  leftSocket: any;\r\n  rightSocket: any;\r\n\r\n  readonly _rightNavUrl: string = \"https://the-social-network1.herokuapp.com/api/right-nav\"\r\n  readonly _leftNavUrl: string = \"https://the-social-network1.herokuapp.com/\"\r\n  readonly _chatUrl: string = \"https://the-social-network1.herokuapp.com/api/chat\"\r\n\r\n  constructor(){\r\n    this.leftSocket = io(this._leftNavUrl);\r\n    this.rightSocket = io(this._rightNavUrl, {\r\n      query: {\r\n        token: this.token\r\n      }\r\n    });\r\n  }\r\n\r\n  StartChatConnection(){\r\n    return this.chatSocket = io(this._chatUrl);\r\n  }\r\n\r\n  listenLeftNav(eventName: string){\r\n    return Rx.Observable.create((subscriber:any)=>{\r\n      this.leftSocket.on(eventName, (data: any)=>{\r\n        subscriber.next(data);\r\n      })\r\n    });\r\n  }\r\n\r\n  listenFriendOnline(eventName: string){\r\n    return Rx.Observable.create((subscriber:any)=>{\r\n      this.rightSocket.on(eventName, (data: any)=>{\r\n        subscriber.next(data);\r\n      })\r\n    });\r\n  }\r\n\r\n  RightNavEmit(eventName: string){\r\n    this.rightSocket.emit(eventName);\r\n  }\r\n\r\n  chatEmit(eventName: string, data: any){\r\n    this.chatSocket.emit(eventName, data);\r\n  }\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from \"@angular/router\";\n@Injectable({\n  providedIn: 'root'\n})\nexport class CountService {\n  readonly _countPostUrl = \"https://the-social-network1.herokuapp.com/api/Count/CountPost/\";\n  readonly _countLikeUrl = \"https://the-social-network1.herokuapp.com/api/Count/CountLike/\";\n  readonly _countFriendUrl = \"https://the-social-network1.herokuapp.com/api/Count/CountFriend/\";\n\n  constructor(\n    private http: HttpClient,\n    private _router: Router\n  ) { }\n\n  CountPost(userId: any){\n    return this.http.get<any>(this._countPostUrl + userId)\n  }\n  CountLike(userId: any){\n    return this.http.get<any>(this._countLikeUrl + userId)\n  }\n  CountFriend(userId: any){\n    return this.http.get<any>(this._countFriendUrl + userId)\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router } from \"@angular/router\";\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class AuthService {\r\n\r\n  readonly _registerUrl = \"https://the-social-network1.herokuapp.com/api/register\";\r\n  readonly _loginUrl = \"https://the-social-network1.herokuapp.com/api/login\";\r\n  readonly _logoutUrl = \"https://the-social-network1.herokuapp.com/api/logout\";\r\n  readonly _changePasswordUrl = \"https://the-social-network1.herokuapp.com/api/change-password\"\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private _router: Router\r\n  ) { }\r\n\r\n  changePassword(password:any){\r\n    return this.http.post<any>(this._changePasswordUrl, password);\r\n  }\r\n\r\n  registerUser(user: any){\r\n    return this.http.post<any>(this._registerUrl, user);\r\n  }\r\n\r\n  loginUser(user: any){\r\n    return this.http.post<any>(this._loginUrl, user);\r\n  }\r\n\r\n  loggedIn() {\r\n    return !!localStorage.getItem('token');\r\n  }\r\n\r\n  logoutUser(){\r\n    localStorage.removeItem('token');\r\n    this._router.navigate(['/login']);\r\n  }\r\n\r\n  setOfflineState(){\r\n    return this.http.get<any>(this._logoutUrl);\r\n  }\r\n\r\n  getToken(){\r\n    return localStorage.getItem('token');\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http'\r\n\r\nimport { AuthService } from \"./Services/auth.service\";\r\nimport { AuthGuard } from \"./Guard/auth.guard\";\r\nimport { TokenInterceptorService } from \"./Services/token-interceptor.service\";\r\n\r\nimport { MatSidenavModule  } from '@angular/material/sidenav';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { ToolbarComponent } from './Blocks/toolbar/toolbar.component';\r\n\r\nimport { ReactiveFormsModule } from \"@angular/forms\";\r\nimport { SideNavComponent } from './Blocks/side-nav/side-nav.component';\r\nimport { TestComponent } from './Blocks/test/test.component';\n\r\nlet angularMaterialModule = [\r\n  MatSidenavModule,\r\n  MatToolbarModule,\r\n  MatIconModule,\r\n  MatListModule,\r\n  MatButtonModule,\r\n  MatCardModule,\r\n  MatInputModule,\r\n  MatFormFieldModule,\r\n  MatBadgeModule,\r\n  ReactiveFormsModule,\r\n  MatMenuModule,\r\n  MatAutocompleteModule,\r\n  MatExpansionModule\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ToolbarComponent,\r\n    SideNavComponent,\r\n    TestComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    angularMaterialModule\r\n  ],\r\n  providers: [\r\n    AuthService,\r\n    AuthGuard,\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: TokenInterceptorService,\r\n      multi: true\r\n    }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\n\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { FormGroup, FormBuilder, FormControl, Validators } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\n\nimport { TestService } from \"../../Services/test.service\";\n\n@Component({\n  selector: 'app-test',\n  templateUrl: './test.component.html',\n  styleUrls: ['./test.component.css']\n})\nexport class TestComponent implements OnInit {\n\n  constructor(\n    private _router: Router,\n    private _test: TestService,\n    private _formBuilder: FormBuilder,\n  ) { }\n\n  ngOnInit(): void {\n\n  }\n\n  PostForm = {\n    animal: String,\n    fruit: String\n  }\n\n  TestForm: FormGroup = this._formBuilder.group({\n      animal : new FormControl('', [Validators.required]),\n      fruit: new FormControl('', [Validators.required])\n  });\n\n  onPostTest(){\n    if (!this.TestForm.valid) {\n      return;\n    }\n    this.PostTest();\n  }\n\n  PostTest(){\n    this.PostForm = this.TestForm.value;\n    this._test.PostTest(this.PostForm)\n      .subscribe(\n        res=>console.log(res),\n        err=>console.log(err)\n      )\n  }\n\n}\n","<form (ngSubmit)=\"onPostTest()\" name=\"TestForm\" [formGroup]=\"TestForm\">\n  <div class=\"animal\">\n    <mat-form-field class=\"full-width\" appearance=\"outline\">\n      <mat-label>Animal</mat-label>\n      <input\n        formControlName=\"animal\"\n        matInput\n      />\n    </mat-form-field>\n  </div>\n  <div class=\"fruit\">\n    <mat-form-field class=\"full-width\" appearance=\"outline\">\n      <mat-label>Fruit</mat-label>\n      <input\n        formControlName=\"fruit\"\n        matInput\n      />\n    </mat-form-field>\n  </div>\n  <button mat-flat-button color=\"primary\" >Post</button>\n</form>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from \"@angular/router\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AboutService {\n\n  readonly _editProfileUrl = \"https://the-social-network1.herokuapp.com//api/edit-profile\";\n\n  constructor(\n    private http: HttpClient,\n    private _router: Router\n  ) { }\n\n  EditProfile(information: any){\n    return this.http.post<any>(this._editProfileUrl, information)\n  }\n}\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\nimport { WebsocketService } from \"../../Services/websocket.service\";\r\nimport { ProfileService } from \"../../Services/profile.service\";\r\nimport { ChatService } from \"../../Services/chat.service\";\r\n\r\n@Component({\r\n  selector: 'app-chat',\r\n  templateUrl: './chat.component.html',\r\n  styleUrls: ['./chat.component.css']\r\n})\r\nexport class ChatComponent implements OnInit {\r\n  title = 'app';\r\n\r\n  showSomething: any[] = [];\r\n  you: any = {\r\n    User_ID: String\r\n  };\r\n  friend: any ={\r\n    User_ID: String,\r\n    name: String,\r\n    avatar: String\r\n  };\r\n  listMessages= {\r\n    content: [{\r\n      User_ID: String,\r\n      content: String\r\n    }]\r\n  };\r\n\r\n  messageFromClient: any;\r\n\r\n  constructor(\r\n    private _socket: WebsocketService,\r\n    private _profile: ProfileService,\r\n    private _chat: ChatService,\r\n    private _activatedRoute: ActivatedRoute\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this._activatedRoute.paramMap.subscribe(params =>{\r\n      let friendId = params.get('friendId');\r\n      this._profile.getUserProfile(friendId)\r\n        .subscribe(\r\n          res=>{\r\n            this.friend = res;\r\n          },\r\n          err=>{\r\n            console.log(err)\r\n          }\r\n        )\r\n    })\r\n\r\n    this._profile.getToolbarProfile()\r\n      .subscribe(\r\n        res=>{\r\n          this.you = res;\r\n        },\r\n        err=>{\r\n          console.log(err);\r\n        }\r\n      )\r\n\r\n      this._activatedRoute.paramMap.subscribe(params =>{\r\n        let friendId = params.get('friendId');\r\n        this._chat.GetChatForClient(friendId)\r\n          .subscribe(\r\n            res=>{\r\n              this.listMessages = res;\r\n              console.log(this.listMessages)\r\n            },\r\n            err=>{\r\n              console.log(err)\r\n            }\r\n          )\r\n      })\r\n\r\n    this._socket.StartChatConnection();\r\n  }\r\n\r\n  SendMessage(data: any){\r\n  }\r\n\r\n  TypingEvent(){\r\n  }\r\n\r\n}\r\n","<mat-card class=\"example-card\">\n  <mat-card-header>\n    <img src=\"https://the-social-network1.herokuapp.com/public/upload/{{friend.avatar}}\" mat-card-avatar alt=\"\">\n    <mat-card-title>{{friend.name}}</mat-card-title>\n  </mat-card-header>\n  <mat-card-content style=\"min-height: 400px; border: 1px green solid; margin: 10px auto;\">\n    <p>\n\n    </p>\n  </mat-card-content>\n  <mat-card-actions>\n    <input matInput type=\"text\" name=\"\" value=\"\" style=\"width: 75%; height: 35px; border: 1px green solid; margin-left:10px;\">\n    <button mat-button style=\"color: white; background-color:green;\">Gửi</button>\n  </mat-card-actions>\n</mat-card>\n\n<script type=\"text/javascript\">\n  $('#btnSendMessage').keypress(function(event) {\n     if (event.keyCode == 13 || event.which == 13) {\n     SendMessage(messageFromClient);\n}\n});\n</script>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from \"@angular/router\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProfileService {\n\n    readonly _baseToolbarUrl = \"https://the-social-network1.herokuapp.com/api/toolbar-profile\";\n    readonly _baseProfileUrl = \"https://the-social-network1.herokuapp.com/api/profile/\";\n    readonly _editProfileUrl = \"https://the-social-network1.herokuapp.com/api/edit-profile\";\n    readonly _changeAvatarUrl = \"https://the-social-network1.herokuapp.com/api/change-avatar\";\n    readonly _changeCoverUrl = \"https://the-social-network1.herokuapp.com/api/change-cover\";\n\n    readonly _editDescriptionUrl = \"https://the-social-network1.herokuapp.com/api/edit-profile/description\";\n    readonly _editNameUrl = \"https://the-social-network1.herokuapp.com/api/edit-profile/name\";\n    readonly _editGenderUrl = \"https://the-social-network1.herokuapp.com/api/edit-profile/gender\";\n    readonly _editDoBUrl = \"https://the-social-network1.herokuapp.com/api/edit-profile/DoB\";\n    readonly _editAddressUrl = \"https://the-social-network1.herokuapp.com/api/edit-profile/address\";\n    readonly _editPhoneUrl = \"https://the-social-network1.herokuapp.com/api/edit-profile/phone\";\n\n    readonly _checkPermissionUrl = \"https://the-social-network1.herokuapp.com/api/profile/checkPermission/\";\n\n    constructor(\n      private http: HttpClient,\n      private _router: Router\n    ) { }\n\n    CheckPermission(userId: any){\n        return this.http.get<any>(this._checkPermissionUrl + userId);\n    }\n\n    getUserProfile(userid: any){\n      return this.http.get<any>(this._baseProfileUrl + userid);\n    }\n\n    getToolbarProfile(){\n      return this.http.get<any>(this._baseToolbarUrl);\n    }\n\n    editUserProfile(user: any){\n      return this.http.post<any>(this._editProfileUrl, user);\n    }\n\n    ChangeAvatar(avatar: any){\n      return this.http.post<any>(this._changeAvatarUrl, avatar);\n    }\n\n    ChangeCover(cover: any){\n      return this.http.post<any>(this._changeCoverUrl, cover);\n    }\n\n    EditDescription(information: any){\n        return this.http.post<any>(this._editDescriptionUrl, information);\n    }\n    EditName(information: any){\n        return this.http.post<any>(this._editNameUrl, information);\n    }\n    EditGender(information: any){\n        return this.http.post<any>(this._editGenderUrl, information);\n    }\n    EditDoB(information: any){\n        return this.http.post<any>(this._editDoBUrl, information);\n    }\n    EditAddress(information: any){\n        return this.http.post<any>(this._editAddressUrl, information);\n    }\n    EditPhone(information: any){\n        return this.http.post<any>(this._editPhoneUrl, information);\n    }\n}\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { FormGroup, FormBuilder, FormControl, Validators } from \"@angular/forms\";\r\nimport { Router } from \"@angular/router\";\r\n\r\nimport { ForgotPasswordService } from \"../../Services/forgot-password.service\";\r\n\r\n@Component({\r\n  selector: 'app-forgot-password',\r\n  templateUrl: './forgot-password.component.html',\r\n  styleUrls: ['./forgot-password.component.css']\r\n})\r\nexport class ForgotPasswordComponent implements OnInit {\r\n\r\n      alertError: boolean = false;\r\n      errCatching = '';\r\n\r\n      UserData = {\r\n      'email': ''\r\n      };\r\n\r\n      hide: boolean = false;\r\n\r\n      constructor(\r\n          private _formBuilder: FormBuilder,\r\n          private _reset: ForgotPasswordService,\r\n          private _router: Router\r\n      ) { }\r\n\r\n      ngOnInit(): void {\r\n      }\r\n\r\n      resetPasswordForm: FormGroup = this._formBuilder.group({\r\n          email : new FormControl('', [Validators.required, Validators.email]),\r\n      });\r\n\r\n      onResetPassword() {\r\n          if (!this.resetPasswordForm.valid) {\r\n            return;\r\n          }\r\n          this.ResetPassword();\r\n        }\r\n\r\n      ResetPassword(){\r\n        this.UserData = this.resetPasswordForm.value;\r\n        this._reset.resetPassword(this.UserData)\r\n        .subscribe(\r\n          res => {\r\n            console.log(res);\r\n            this.alertError = true;\r\n            this.errCatching = res;\r\n            console.log(this.errCatching);\r\n          },\r\n          err => {\r\n            console.log(err);\r\n            this.alertError = true;\r\n            this.errCatching = err.error;\r\n            console.log(this.errCatching);\r\n          }\r\n        )\r\n      }\r\n}\r\n","<mat-card>\r\n    <mat-card-content>\r\n      <div class=\"header\" header>\r\n        <!-- Alert login -->\r\n        <div class=\"alert alert-info alert-dismissable\" *ngIf=\"alertError\">\r\n          <a class=\"panel-close close\" data-dismiss=\"alert\">×</a>\r\n          <i class=\"fa fa-coffee\"></i>\r\n          {{errCatching}}\r\n        </div>\r\n\r\n        <P>Lấy lại mật khẩu</P>\r\n      </div>\r\n      <form (ngSubmit)=\"onResetPassword()\" name=\"resetPasswordForm\" [formGroup]=\"resetPasswordForm\">\r\n        <div class=\"emailInput\">\r\n          <mat-form-field class=\"full-width\" appearance=\"outline\">\r\n            <mat-label>Email</mat-label>\r\n            <input\r\n              formControlName=\"email\"\r\n              matInput\r\n              placeholder=\"Enter email address\" required\r\n            />\r\n            <mat-error *ngIf=\"!resetPasswordForm.controls['email'].valid\">\r\n                Email is required\r\n              </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <button mat-flat-button style=\"color:white;background-color:green;\">Xác nhận</button>\r\n      </form>\r\n    </mat-card-content>\r\n  </mat-card>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router } from \"@angular/router\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ForgotPasswordService {\r\n\r\n    readonly _resetPasswordUrl = \"https://the-social-network1.herokuapp.com/api/reset\";\r\n\r\n    constructor(\r\n      private http: HttpClient,\r\n      private _router: Router\r\n    ) { }\r\n\r\n    resetPassword(user: any){\r\n      return this.http.post<any>(this._resetPasswordUrl, user);\r\n    }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-chat-room',\n  templateUrl: './chat-room.component.html',\n  styleUrls: ['./chat-room.component.css']\n})\nexport class ChatRoomComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-card>\n  Trạm cứu hộ động vật\n</mat-card>\n\n<mat-card>\n  Kết bạn bốn phương\n</mat-card>\n","<mat-sidenav-container>\n  <!--Left menu -->\n  <mat-sidenav #right position=\"start\" #sidenav mode = \"side\" style=\"width:350px\" [(opened)] = \"leftOpened\">\n    <mat-card class=\"mat-elevation-z1\">\n      <div class=\"clock inactive waves-effect\">{{time}}</div>\n    </mat-card>\n    <mat-nav-list>\n      <mat-card class=\"mat-elevation-z1\">\n        <mat-card-header>\n          <mat-card-title>Thời tiết Hà Nội</mat-card-title>\n          <mat-card-subtitle>Hôm nay: {{date}}</mat-card-subtitle>\n        </mat-card-header>\n        <mat-card-content>\n          <div class=\"flex-row\">\n                <div class=\"temp\">\n                  <span class=\"big-text\">{{temperature}} C</span>\n                  <span>Hum: {{humidity}}</span>\n                  <span>UV: {{UVLevel}}</span>\n                </div>\n                <div class=\"outlook\">\n                  <img src=\"http://openweathermap.org/img/wn/02d@2x.png\" />\n                  <span>Few Clouds {{rainState}}</span>\n                </div>\n          </div>\n        </mat-card-content>\n      </mat-card>\n    </mat-nav-list>\n    <mat-card class=\"mat-elevation-z1 bottom\">\n      <div class=\"\">Saved </div>\n      <div class=\"clock inactive waves-effect\">{{plasticBottle}}</div>\n    </mat-card>\n  </mat-sidenav>\n  <mat-sidenav-content>\n    <div id=\"main-content\">\n      <router-outlet></router-outlet>\n    </div>\n  </mat-sidenav-content>\n  <!--Right menu -->\n\n  <mat-sidenav #left position=\"end\" #sidenav mode = \"side\" [(opened)] = \"rightOpened\" style=\"width:350px;\" *ngIf=\"_authService.loggedIn()\">\n    <a mat-button *ngIf=\"alertError\">{{errCatching}}</a>\n    <div class=\"GetAllFriend\" *ngIf=\"!alertError\">\n      <mat-expansion-panel hideToggle>\n      <mat-expansion-panel-header>\n        <mat-panel-title>\n      <a mat-button class=\"Friend\"> <mat-icon class=\"Icon\" routerLink=\"/\"> assignment_ind </mat-icon> Danh sách bạn bè </a>\n        </mat-panel-title>\n        </mat-expansion-panel-header>\n        <div *ngFor=\"let friend of friendList\" routerLink=\"/chat/{{friend.Friend_ID}}\">\n          <img mat-card-avatar src=\"https://the-social-network1.herokuapp.com/public/upload/{{friend.avatar}}\" alt=\"\">\n          <a mat-button>{{friend.name}}</a>\n        </div>\n      </mat-expansion-panel>\n    </div>\n    <br>\n    <mat-expansion-panel hideToggle>\n    <mat-expansion-panel-header>\n      <mat-panel-title>\n        <a mat-button class=\"Friend\"> <mat-icon class=\"Icon\" routerLink=\"/\"> face </mat-icon> Bạn bè trực tuyến </a>\n      </mat-panel-title>\n    </mat-expansion-panel-header>\n    <div class=\"getOnlineFriendOnly\" *ngIf=\"!alertError\">\n      <div *ngFor=\"let friend of listUser\" routerLink=\"/chat/{{friend.Friend_ID}}\">\n        <img mat-card-avatar src=\"https://the-social-network1.herokuapp.com/public/upload/{{friend.avatar}}\" alt=\"\">\n        <a mat-button>{{friend.name}}</a>\n      </div>\n    </div>\n  </mat-expansion-panel>\n  </mat-sidenav>\n</mat-sidenav-container>\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from \"@angular/router\";\r\n\r\nimport { AuthService } from \"../../Services/auth.service\";\r\nimport { FriendService } from \"../../Services/friend.service\";\r\nimport { WebsocketService } from \"../../Services/websocket.service\";\r\n\r\n@Component({\r\n  selector: 'app-side-nav',\r\n  templateUrl: './side-nav.component.html',\r\n  styleUrls: ['./side-nav.component.css']\r\n})\r\nexport class SideNavComponent implements OnInit {\r\n  rightOpened = true;\r\n  leftOpened = true;\r\n\r\n  time: any;\r\n  date:any;\r\n\r\n  temperature: any = '0';\r\n  humidity:any = '0';\r\n  rainState: any = '0';\r\n  UVLevel: any = '0';\r\n  plasticBottle: any = '5';\r\n\r\n  alertError: boolean = false;\r\n  errCatching = '';\r\n\r\n  listUser: any[] = [];\r\n\r\n  friendList = [{\r\n    User_ID: String,\r\n    Friend_ID: String,\r\n    avatar: String,\r\n    name: String\r\n  }]\r\n\r\n  constructor(\r\n      private _router: Router,\r\n      public _authService: AuthService,\r\n      private _friend: FriendService,\r\n      private _websocketService: WebsocketService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this._websocketService.listenFriendOnline(\"Server-Sent-UserOnline\").subscribe((data:any)=>{\r\n    this.listUser = data;\r\n    })\r\n\r\n    this._websocketService.listenLeftNav(\"Server-Sent-Time\").subscribe((data:any)=>{\r\n    this.time = data;\r\n    })\r\n\r\n    this._websocketService.listenLeftNav(\"Server-Sent-Date\").subscribe((data:any)=>{\r\n    this.date = data;\r\n    })\r\n\r\n    this._websocketService.listenLeftNav(\"Server-Sent-Temperature\").subscribe((data:any)=>{\r\n    this.temperature = data;\r\n    })\r\n\r\n    this._websocketService.listenLeftNav(\"Server-Sent-Humidity\").subscribe((data:any)=>{\r\n    this.humidity = data;\r\n    })\r\n\r\n    this._websocketService.listenLeftNav(\"Server-Sent-UVLevel\").subscribe((data:any)=>{\r\n    this.UVLevel = data;\r\n    })\r\n\r\n    this._websocketService.listenLeftNav(\"Server-Sent-Value\").subscribe((data:any)=>{\r\n    this.plasticBottle = data;\r\n    })\r\n\r\n    //this._websocketService.listenLeftNav(\"Server-Sent-Value\").subscribe((data:any)=>{\r\n    //this.plasticBottle = data;\r\n\r\n    this.getAllFriend();\r\n  }\r\n\r\n  getAllFriend(){\r\n    this._friend.GetAllFriend()\r\n      .subscribe(\r\n        res =>{\r\n          this.friendList = res;\r\n        },\r\n        err =>{\r\n          this.alertError = true;\r\n          this.errCatching = err.error\r\n        }\r\n      )\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { FormControl } from '@angular/forms';\r\n\r\nimport { AuthService } from \"../../Services/auth.service\";\r\nimport { ProfileService } from \"../../Services/profile.service\";\r\nimport { FriendService } from \"../../Services/friend.service\";\r\nimport { CountService } from \"../../Services/count.service\";\r\nimport { SearchService } from \"../../Services/search.service\";\r\nimport { WebsocketService } from \"../../Services/websocket.service\";\r\n\r\nimport { Router } from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'app-toolbar',\r\n  templateUrl: './toolbar.component.html',\r\n  styleUrls: ['./toolbar.component.css']\r\n})\r\nexport class ToolbarComponent implements OnInit {\r\n\r\n  options: any = [{\r\n    \"content\": \"\"\r\n  }];\r\n\r\n  searchForm = new FormControl();\r\n  noFriendQueue: boolean = false;\r\n  noFriendQueueCatching = '';\r\n\r\n  checkResult: any;\r\n\r\n  userProfile = {\r\n    userId: String,\r\n    name: String,\r\n    avatar: String\r\n  };\r\n\r\n  friendRequest = [{\r\n    User_ID: String,\r\n    FriendQueue_ID: String,\r\n    name: String,\r\n    avatar: String\r\n  }]\r\n\r\n  constructor(\r\n    public _authService: AuthService,\r\n    public _getUserId: ProfileService,\r\n    private _friend: FriendService,\r\n    private _count: CountService,\r\n    private _search: SearchService,\r\n    private _socket: WebsocketService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.refreshToolbar();\r\n    this.getFriendRequest();\r\n    this.getSearchHistories();\r\n    if(this._authService.loggedIn()){\r\n      this._socket.RightNavEmit(\"Client-LoggedIn\")\r\n    }else{\r\n      this._socket.RightNavEmit(\"disconnect\")\r\n    }\r\n  }\r\n\r\n  getSearchHistories(){\r\n    this._search.getSearchHistories()\r\n      .subscribe(\r\n        res => this.options = res,\r\n        err => console.log(err)\r\n      )\r\n  }\r\n\r\n  refreshToolbar(){\r\n    this._getUserId.getToolbarProfile()\r\n      .subscribe(\r\n        res => {\r\n          this.userProfile = res;\r\n        },\r\n        err=>{\r\n          console.log(err);\r\n        }\r\n      )\r\n  }\r\n\r\n  getFriendRequest(){\r\n    this._friend.GetAllFriendRequest()\r\n      .subscribe(\r\n        res=>{\r\n          this.friendRequest = res;\r\n        },\r\n        err=>{\r\n          this.noFriendQueue = true;\r\n          this.noFriendQueueCatching = err.error;\r\n          console.log(this.noFriendQueueCatching)\r\n        }\r\n      )\r\n  }\r\n\r\n  acceptFriendRequest(friendQueue_ID: any){\r\n    this._friend.AcceptFriendRequest(friendQueue_ID, \"anything\")\r\n      .subscribe(\r\n        res => {\r\n          window.location.reload()\r\n        },\r\n        err => {\r\n          window.location.reload()\r\n        }\r\n      )\r\n  }\r\n\r\n  deleteFriendRequest(friendQueue_ID: any){\r\n    this._friend.DeleteFriendRequest(friendQueue_ID, \"anything\")\r\n      .subscribe(\r\n        res => {\r\n          window.location.reload()\r\n        },\r\n        err => {\r\n          window.location.reload()\r\n        }\r\n      )\r\n  }\r\n\r\n  Search(){\r\n    this._search.Search({\"search\": this.searchForm.value})\r\n      .subscribe(\r\n        res => {\r\n          this.checkResult = res\r\n          this._search.sendResult(this.checkResult)\r\n        },\r\n        err => {\r\n          console.log(err)\r\n          this.checkResult = [];\r\n          this._search.sendResult(this.checkResult);\r\n        }\r\n      )\r\n  }\r\n\r\n  displayFn(user: any): string {\r\n  return user && user.name ? user.name : '';\r\n  }\r\n\r\n  Logout(){\r\n    this._authService.setOfflineState()\r\n      .subscribe(\r\n        res => console.log(res),\r\n        err => console.log(err)\r\n      )\r\n\r\n    this._authService.logoutUser();\r\n  }\r\n\r\n}\r\n","<mat-toolbar class=\"mat-elevation-z8\">\r\n  <a mat-button routerLink=\"/\" class=\"Logo\"> <mat-icon routerLink=\"/\"> public </mat-icon> TSN </a>\r\n    <span class=search *ngIf=\"_authService.loggedIn()\">\r\n      <!-- Search form -->\r\n        <form class=\"example-form\">\r\n          <mat-form-field class=\"example-full-width\">\r\n\r\n            <input class= \"b\" type=\"text\" matInput [formControl]=\"searchForm\" [matAutocomplete]=\"auto\">\r\n            <mat-autocomplete #auto=\"matAutocomplete\" [displayWith]=\"displayFn\">\r\n              <mat-option *ngFor=\"let option of options\" [value]=\"options\">\r\n                {{option.content}}\r\n              </mat-option>\r\n            </mat-autocomplete>\r\n          </mat-form-field>\r\n        </form>\r\n    </span>\r\n    <button mat-button (click)=\"Search()\" [routerLink]=\"['/search']\"><mat-icon class=\"mat-icon-rtl-mirror\" aria-hidden=\"true\" *ngIf=\"_authService.loggedIn()\"> search </mat-icon></button>\r\n\r\n  <div class=\"spacer\"></div>\r\n\r\n  <!-- Center -->\r\n  <div class=\"center\">\r\n    <a mat-button [routerLink]=\"['/']\" >     <mat-icon style=\"margin-top:15px;\"> home </mat-icon> <br> <span> Trang chủ </span></a>\r\n    <a mat-button [routerLink]=\"['/news']\" > <mat-icon style=\"margin-top:15px;\"> feed </mat-icon> <br> <span> Tin tức </span></a>\r\n    <a mat-button [routerLink]=\"['/chat-room']\" > <mat-icon style=\"margin-top:15px;\"> chat </mat-icon> <br> <span> Trạm cứu hộ động vật  </span> </a>\r\n  </div>\r\n\r\n  <!-- Right -->\r\n  <div class=\"right\" *ngIf=\"_authService.loggedIn()\">\r\n    <button mat-button [matMenuTriggerFor]=\"menu\" *ngIf=\"!noFriendQueue\"><mat-icon matBadge=\"{{friendRequest.length}}\" matBadgeColor=\"warn\">group</mat-icon></button>\r\n    <button mat-button [matMenuTriggerFor]=\"menu\" *ngIf=\"noFriendQueue\"><mat-icon *ngIf=\"_authService.loggedIn()\">group</mat-icon></button>\r\n    <mat-menu #menu=\"matMenu\">\r\n      <a mat-menu-item *ngIf=\"noFriendQueue\">{{noFriendQueueCatching}}</a>\r\n      <div class=\"Friend_Queue\" *ngIf=\"!noFriendQueue\">\r\n        <a mat-menu-item *ngFor=\"let friend of friendRequest\">\r\n          {{friend.name}}\r\n          <button mat-button (click)=\"acceptFriendRequest(friend.FriendQueue_ID)\">Chấp nhận</button>\r\n          <button mat-button (click)=\"deleteFriendRequest(friend.FriendQueue_ID)\">Từ chối</button>\r\n        </a>\r\n      </div>\r\n    </mat-menu>\r\n  </div>\r\n\r\n  <span class=\"\" *ngIf=\"_authService.loggedIn()\">\r\n    <button mat-button [matMenuTriggerFor]=\"menu\">\r\n      <img mat-card-avatar src=\"https://the-social-network1.herokuapp.com/public/upload/{{userProfile.avatar}}\">\r\n      <span> {{userProfile.name}} </span>\r\n    </button>\r\n    <mat-menu #menu=\"matMenu\">\r\n      <a mat-menu-item [routerLink]=\"['/profile/',userProfile.userId]\">\r\n        <img mat-card-avatar src=\"https://the-social-network1.herokuapp.com/public/upload/{{userProfile.avatar}}\">\r\n        {{userProfile.name}}\r\n      </a>\r\n      <button mat-menu-item [routerLink]=\"['/setting']\">Cài đặt</button>\r\n      <button mat-menu-item (click)=\"Logout()\" *ngIf=\"_authService.loggedIn()\">Đăng xuất</button>\r\n    </mat-menu>\r\n  </span>\r\n\r\n  <a mat-button [routerLink]=\"['/login']\" *ngIf=\"!_authService.loggedIn()\" > Đăng nhập </a>\r\n  <a mat-button [routerLink]=\"['/register']\" *ngIf=\"!_authService.loggedIn()\" > Đăng Ký </a>\r\n\r\n</mat-toolbar>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router } from \"@angular/router\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CommentService {\r\n\r\n  readonly _addCommentUrl = \"https://the-social-network1.herokuapp.com/api/Comments/new/\";\r\n  readonly _getCommentUrl = \"https://the-social-network1.herokuapp.com/api/Comment/getComment/\";\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private _router: Router\r\n  ) { }\r\n\r\n  getAllComment(postId:any){\r\n    return this.http.get<any>(this._getCommentUrl + postId)\r\n  }\r\n\r\n  AddNewComment(postId: any, comment: any){\r\n    return this.http.post<any>(this._addCommentUrl + postId, comment);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from \"../Services/auth.service\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(\r\n    private _auth: AuthService,\r\n    private _router: Router\r\n  ) { }\r\n\r\n  canActivate(): boolean{\r\n    if (this._auth.loggedIn()){\r\n      return true;\r\n    }else{\r\n      this._router.navigate(['/login']);\r\n      return false;\r\n    }\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { Router } from \"@angular/router\";\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { FormGroup, FormBuilder, FormControl, Validators } from \"@angular/forms\";\r\n\r\nimport { ProfileService } from \"../../Services/profile.service\";\r\nimport { PostService } from \"../../Services/post.service\";\r\nimport { AuthService } from \"../../Services/auth.service\";\r\nimport { CommentService } from \"../../Services/comment.service\";\r\nimport { FriendService } from \"../../Services/friend.service\";\r\nimport { ReactionService } from \"../../Services/reaction.service\";\r\nimport { CountService } from \"../../Services/count.service\";\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.css']\r\n})\r\n\r\nexport class ProfileComponent implements OnInit {\r\n\r\n  checkPermission: Boolean = false;\r\n  date = new FormControl(new Date());\r\n  openComment: Boolean = true;\r\n\r\n  editBiology: Boolean = false;\r\n  editName: Boolean = false;\r\n  editGender: Boolean = false;\r\n  editDoB: Boolean = false;\r\n  editAddress: Boolean = false;\r\n  editPhone: Boolean = false;\r\n\r\n  countPost:Number = 0;\r\n  countLike:Number = 0;\r\n  countFriend:Number = 0;\r\n  liked: boolean = true;\r\n  likedColor:String = \"green\";\r\n  PostForm: FormGroup;\r\n  postNoImage = {\r\n    \"content\": \"\"\r\n  }\r\n  userId:any;\r\n\r\n  alertError: boolean = false;\r\n  errCatching = '';\r\n\r\n  userProfile = {\r\n    DoB: String,\r\n    address: String,\r\n    avatar: String,\r\n    cover: String,\r\n    description: String,\r\n    email: String,\r\n    \"gender\": \"\",\r\n    name: String,\r\n    phone: String\r\n  };\r\n\r\n  editProfile = {\r\n    \"address\": \"\",\r\n    \"description\": \"\",\r\n    \"gender\":\"\",\r\n    \"name\": \"\",\r\n    \"phone\": \"\"\r\n  }\r\n\r\n  post = {\r\n    content: String,\r\n    images: File\r\n  }\r\n\r\n  getPost = [{\r\n    UserName: String,\r\n    Post_ID: String,\r\n    UserAvatar: String,\r\n    title: String,\r\n    content: String,\r\n    images: String,\r\n    Comments: [{\r\n      UserName: String,\r\n      avatar: String,\r\n      content: String\r\n    }],\r\n    isLiked: Boolean,\r\n    like: 0,\r\n    date: Date\r\n  }]\r\n\r\n  getProfileFriend = [{\r\n    Friend_ID: String,\r\n    avatar: String,\r\n    name: String\r\n  }]\r\n\r\n  constructor(\r\n    private _formBuilder: FormBuilder,\r\n    private _profile: ProfileService,\r\n    private _post: PostService,\r\n    private _router: Router,\r\n    private _activatedRoute: ActivatedRoute,\r\n    public _auth: AuthService,\r\n    private _comment: CommentService,\r\n    private _friend: FriendService,\r\n    private _reaction: ReactionService,\r\n    private _count: CountService\r\n  ) {\r\n    this.PostForm = this._formBuilder.group({\r\n      content: new FormControl('', [Validators.required]),\r\n      images: new FormControl('', [Validators.required])\r\n    })\r\n   }\r\n\r\n   CommentForm: FormGroup = this._formBuilder.group({\r\n     content: new FormControl('', [Validators.required])\r\n   })\r\n\r\n   CheckGender(){\r\n     if(this.userProfile.gender == \"Nam\"){\r\n       return 0;\r\n     }else if(this.userProfile.gender == \"Nữ\"){\r\n       return 1;\r\n     }else {\r\n       return -1;\r\n     }\r\n   }\r\n\r\n  ngOnInit(): void {\r\n    this._activatedRoute.paramMap.subscribe(params => {\r\n      this.userId = params.get('userId');\r\n      this._profile.getUserProfile(this.userId)\r\n        .subscribe(\r\n          res => {\r\n            this.userProfile = res;\r\n            //console.log(this.userProfile)\r\n          },\r\n          err=>{\r\n            console.log(err);\r\n          }\r\n        )\r\n      this._post.GetPost(this.userId)\r\n        .subscribe(\r\n          res => {\r\n            this.getPost = res;\r\n            this.getPost.forEach(post => {\r\n              this._reaction.CheckLiked(post.Post_ID).subscribe(\r\n                res => post.isLiked = res,\r\n                err => console.log(err)\r\n              )\r\n              this._reaction.CountLike(post.Post_ID).subscribe(\r\n                res => post.like = res,\r\n                err => console.log(err)\r\n              )\r\n              this._comment.getAllComment(post.Post_ID).subscribe(\r\n                res => post.Comments =res,\r\n                err => console.log(err)\r\n              )\r\n            });\r\n            console.log(res);\r\n          },\r\n          err=>{\r\n            console.log(err);\r\n          }\r\n        )\r\n\r\n      this._count.CountPost(this.userId).subscribe(\r\n        res => this.countPost = res,\r\n        err => console.log(err)\r\n      )\r\n      this._count.CountLike(this.userId).subscribe(\r\n        res => this.countLike = res,\r\n        err => console.log(err)\r\n      )\r\n      this._count.CountFriend(this.userId).subscribe(\r\n        res => this.countFriend = res,\r\n        err => console.log(err)\r\n      )\r\n      this._friend.GetProfileFriend(this.userId).subscribe(\r\n        res => this.getProfileFriend = res,\r\n        err => console.log(err)\r\n      )\r\n      this._profile.CheckPermission(this.userId).subscribe(\r\n        res => this.checkPermission = res,\r\n        err => console.log(err)\r\n      )\r\n    });\r\n  }\r\n\r\n  LikedColorChange(){\r\n    this.liked = !this.liked;\r\n    if(this.liked == true){\r\n      this.likedColor = \"basic\"\r\n    }\r\n    else{\r\n      this.likedColor = \"primary\"\r\n    }\r\n  }\r\n\r\n  onAddNewFriend(){\r\n      this._activatedRoute.paramMap.subscribe(params =>{\r\n        this._friend.SendFriendRequest(params.get('userId'),\"anything\")\r\n          .subscribe(\r\n            res=>{\r\n              console.log(res)\r\n            },\r\n            err=>{\r\n              console.log(err)\r\n            }\r\n          )\r\n      })\r\n  }\r\n\r\n  onAddNewPost(){\r\n    if (!this.PostForm.valid) {\r\n      return;\r\n    }\r\n    this.AddNewPost();\r\n  }\r\n\r\n  onAddNewComment(PostId: any){\r\n    if (!this.CommentForm.valid) {\r\n      return;\r\n    }\r\n    this.AddNewComment(PostId);\r\n  }\r\n\r\n  AddNewComment(PostId: any){\r\n    this._comment.AddNewComment(PostId, this.CommentForm.value)\r\n    .subscribe(\r\n      res => {\r\n        this.ngOnInit()\r\n      },\r\n      err => {\r\n        this.alertError = true;\r\n        this.errCatching = err.error;\r\n        console.log(this.errCatching);\r\n        this.ngOnInit()\r\n        this.CommentForm.reset()\r\n      }\r\n    )\r\n  }\r\n\r\n  UploadImages(event:any){\r\n    const file = event.target.files[0];\r\n      this.PostForm.patchValue({\r\n        images: file\r\n      })\r\n  }\r\n\r\n  changeAvatar(event: any){\r\n    const images = event.target.files[0];\r\n\r\n    const formdata = new FormData();\r\n    formdata.append('images', images)\r\n\r\n    this._profile.ChangeAvatar(formdata)\r\n      .subscribe(\r\n        res => {\r\n          console.log(res);\r\n          let userId = this._activatedRoute.snapshot.paramMap.get('userId')\r\n          this._router.navigateByUrl('/profile', { skipLocationChange: true }).then(() => {\r\n              this._router.navigate([`/profile/${userId}`]);\r\n          });\r\n        },\r\n        err => {\r\n          this.ngOnInit()\r\n        }\r\n\r\n      )\r\n  }\r\n\r\n  changeCover(event: any){\r\n    const images = event.target.files[0];\r\n\r\n    const formdata = new FormData();\r\n    formdata.append('images', images)\r\n\r\n    this._profile.ChangeCover(formdata)\r\n      .subscribe(\r\n        res => {\r\n          console.log(res);\r\n          let userId = this._activatedRoute.snapshot.paramMap.get('userId')\r\n          this._router.navigateByUrl('/profile', { skipLocationChange: true }).then(() => {\r\n              this._router.navigate([`/profile/${userId}`]);\r\n          });\r\n        },\r\n        err => {\r\n          this.ngOnInit()\r\n        }\r\n\r\n      )\r\n  }\r\n\r\n  DeletePost(postId: any){\r\n    this._post.DeletePost(postId)\r\n      .subscribe(\r\n        res => {\r\n          console.log(res);\r\n          let userId = this._activatedRoute.snapshot.paramMap.get('userId')\r\n          this._router.navigateByUrl('/profile', { skipLocationChange: true }).then(() => {\r\n              this._router.navigate([`/profile/${userId}`]);\r\n          });\r\n        },\r\n        err => {\r\n          this.ngOnInit()\r\n        }\r\n      )\r\n  }\r\n\r\n  AddNewPost(){\r\n    const PostFormData = new FormData();\r\n    PostFormData.append('images',this.PostForm.value.images);\r\n    PostFormData.append('content',this.PostForm.value.content);\r\n    console.log(PostFormData);\r\n    this._activatedRoute.paramMap.subscribe(params=>{\r\n      this._post.AddNewPost(params.get('userId'), PostFormData)\r\n      .subscribe(\r\n        res => {\r\n          console.log(res);\r\n          let userId = this._activatedRoute.snapshot.paramMap.get('userId')\r\n          this._router.navigateByUrl('/profile', { skipLocationChange: true }).then(() => {\r\n              this._router.navigate([`/profile/${userId}`]);\r\n          });\r\n        },\r\n        err => {\r\n          this.ngOnInit();\r\n          this.PostForm.reset()\r\n        }\r\n      )\r\n    })\r\n  }\r\n\r\n  PostNoImage(){\r\n    this._activatedRoute.paramMap.subscribe(params=>{\r\n      this._post.AddNewPostNoImage(params.get('userId'), this.postNoImage)\r\n        .subscribe(\r\n          res =>{\r\n            console.log(res);\r\n            let userId = this._activatedRoute.snapshot.paramMap.get('userId')\r\n            this._router.navigateByUrl('/profile', { skipLocationChange: true }).then(() => {\r\n                this._router.navigate([`/profile/${userId}`]);\r\n            });\r\n          },\r\n          err =>{\r\n            this.ngOnInit()\r\n            this.postNoImage.content = ''\r\n          }\r\n        )\r\n\r\n    })\r\n  }\r\n\r\n  EditDescription(){\r\n    if(this._auth.loggedIn()){\r\n      this._profile.EditDescription(this.editProfile)\r\n      .subscribe(\r\n        res=> console.log(res),\r\n        err => {\r\n          this.ngOnInit();\r\n          this.editProfile.description = ''\r\n          this.editBiology = !this.editBiology\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n  EditName(){\r\n    if(this._auth.loggedIn()){\r\n      this._profile.EditName({\"name\": this.editProfile.name})\r\n      .subscribe(\r\n        res=> console.log(res),\r\n        err => {\r\n          this.ngOnInit();\r\n          this.editProfile.name = ''\r\n          this.editName = !this.editName\r\n        }\r\n      )\r\n    }\r\n  }\r\n  EditGender(){\r\n    if(this._auth.loggedIn()){\r\n      this._profile.EditGender({\"gender\": this.editProfile.gender})\r\n      .subscribe(\r\n        res=> console.log(res),\r\n        err => {\r\n          this.ngOnInit();\r\n          this.editProfile.gender = ''\r\n          this.editGender = !this.editGender\r\n        }\r\n      )\r\n    }\r\n  }\r\n  EditDoB(){\r\n    if(this._auth.loggedIn()){\r\n      this._profile.EditDoB({\"DoB\": this.date.value})\r\n      .subscribe(\r\n        res=> console.log(res),\r\n        err => {\r\n          this.ngOnInit();\r\n          this.date.reset();\r\n          this.editDoB = !this.editDoB\r\n        }\r\n      )\r\n    }\r\n  }\r\n  EditAddress(){\r\n    if(this._auth.loggedIn()){\r\n      this._profile.EditAddress({\"address\": this.editProfile.address})\r\n      .subscribe(\r\n        res=> console.log(res),\r\n        err => {\r\n          this.ngOnInit();\r\n          this.editProfile.address = ''\r\n          this.editAddress = !this.editAddress\r\n        }\r\n      )\r\n    }\r\n  }\r\n  EditPhone(){\r\n    if(this._auth.loggedIn()){\r\n      this._profile.EditPhone({\"phone\": this.editProfile.phone})\r\n      .subscribe(\r\n        res=> console.log(res),\r\n        err => {\r\n          this.ngOnInit();\r\n          this.editProfile.phone = ''\r\n          this.editPhone = !this.editPhone\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n  LikePost(post: any){\r\n    post.isLiked = !post.isLiked;\r\n    post.like += 1;\r\n    this._reaction.Like(post.Post_ID).subscribe(\r\n      res => console.log(res),\r\n      err => this.ngOnInit()\r\n    )\r\n  }\r\n\r\n  unLikePost(post: any){\r\n    post.isLiked = !post.isLiked;\r\n    post.like -= 1;\r\n    this._reaction.unLike(post.Post_ID).subscribe(\r\n      res => console.log(res),\r\n      err => this.ngOnInit()\r\n    )\r\n  }\r\n\r\n  UnFriend(friendId:any){\r\n    this._friend.UnFriend(friendId, \"anything\").subscribe(\r\n      res => {\r\n        this._router.navigateByUrl('/profile', { skipLocationChange: true }).then(() => {\r\n            this._router.navigate([`/profile/${this.userId}`]);\r\n        });\r\n      },\r\n      err => {\r\n        this.ngOnInit()\r\n      }\r\n    )\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"container\">\r\n  <!--Heading -->\r\n    <div class=\"image\">\r\n        <img class=\"cover\" mat-card-cover src=\"https://the-social-network1.herokuapp.com/public/upload/{{userProfile.cover}}\" alt=\"\">\r\n        <label for=\"change-cover\" class=\"changeCover\" *ngIf=\"_auth.loggedIn() && checkPermission\" > <mat-icon>photo_camera</mat-icon> Đổi ảnh bìa </label>\r\n      <input class = \"changeCover\" id=\"change-cover\" type=\"file\" (change)= \"changeCover($event)\" hidden=true>\r\n    </div>\r\n    <div class=\"image\">\r\n      <img class=\"avatar\" src=\"https://the-social-network1.herokuapp.com/public/upload/{{userProfile.avatar}} \" mat-card-avatar >\r\n      <label for=\"change-avatar\" class=\"changeAvatar\" *ngIf=\"_auth.loggedIn() && checkPermission\" > <mat-icon>photo_camera</mat-icon> </label>\r\n      <input class = \"changeAvatar\" id=\"change-avatar\" type=\"file\" (change)= \"changeAvatar($event)\" hidden=true>\r\n    </div>\r\n    <div class=\"divUserName\">\r\n      <span class=\"UserName\"> {{userProfile.name}} </span>\r\n    </div>\r\n    <div class=\"divBiology\">\r\n      <span class=\"Biology\" *ngIf=\"!editBiology\">{{userProfile.description}} <mat-icon *ngIf=\"_auth.loggedIn() && checkPermission\" style=\"color:green; margin-left:10px;\" (click) = \"editBiology = !editBiology\">border_color</mat-icon> </span>\r\n      <form class=\"form\" *ngIf=\"editBiology\">\r\n        <div class=\"form-group\">\r\n            <input class=\"form-control\" id=\"editBiology\" type=\"text\" name=\"description\" placeholder=\"{{userProfile.description}}\" value=\"{{userProfile.description}}\" [(ngModel)]=\"editProfile.description\">\r\n        </div>\r\n        <button mat-flat-button class=\"submitPostBtn\" style=\"width:5%; margin:10px 10px;\" (click)=\"EditDescription()\"> Lưu </button>\r\n        <button mat-stroked-button style=\"width:5%; margin:10px 10px;\" (click)=\"editBiology = !editBiology\"> Hủy </button>\r\n      </form>\r\n    </div>\r\n    <a mat-stroked-button (click)=\"onAddNewFriend()\" class=\"AddFriendButtonHeading\" *ngIf=\"_auth.loggedIn()\"> Thêm bạn </a>\r\n\r\n<!--Routing button-->\r\n    <mat-tab-group style=\"padding-top:20px; width:100%;\" mat-align-tabs=\"center\">\r\n      <mat-tab label=\"Dòng thời gian\" class=\"TimeLine\">\r\n        <!--Content -->\r\n        <div class=\"content\">\r\n          <div class=\"row\">\r\n            <div class=\"col-lg-5\">\r\n              <mat-card class=\"CountRating\">\r\n                <mat-card-content>\r\n                  <div class=\"row\">\r\n                    <div class=\"col-md-4\">\r\n                      <div class=\"count\">\r\n                        <span class=\"countTop\">{{countFriend}}</span> <br>\r\n                        <div class=\"countBottom\">\r\n                          <span class=\"countBottom\">Lượt theo dõi</span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"col-md-4\">\r\n                      <div class=\"count\">\r\n                        <span class=\"countTop\">{{countPost}}</span><br>\r\n                        <div class=\"countBottom\">\r\n                          <span class=\"countBottom\">Bài viết</span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"col-md-4\">\r\n                      <div class=\"countlast\">\r\n                        <span class=\"countTop\">{{countLike}}</span><br>\r\n                        <div class=\"countBottom\">\r\n                          <span class=\"countBottom\">Lượt thích</span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </mat-card-content>\r\n              </mat-card>\r\n              <mat-card class=\"About\">\r\n                <mat-card-content>\r\n                  <div class=\"row\">\r\n                    <div class=\"AboutHeader\">\r\n                      <span>Giới thiệu</span>\r\n                    </div>\r\n                    <div class=\"AboutContent\">\r\n                      <mat-icon class=\"AboutIcon\">person</mat-icon>\r\n                      <span> Giới tính: <mat-icon *ngIf=\"CheckGender() == 0\" class=\"AboutIcon\" style=\"color:blue;\">male</mat-icon>\r\n                                        <mat-icon *ngIf=\"CheckGender() == 1\" class=\"AboutIcon\" style=\"color:pink;\">female</mat-icon>\r\n                                        <mat-icon *ngIf=\"CheckGender() == -1\" class=\"AboutIcon\" style=\"color:black;\">transgender</mat-icon>\r\n                        {{userProfile.gender}}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"row\">\r\n                    <div class=\"AboutHeader\">\r\n                      <span>Sở thích</span>\r\n                    </div>\r\n                    <div class=\"AboutContent\">\r\n                      <mat-chip-list aria-label=\"Fish selection\">\r\n                        <mat-chip><mat-icon>palette</mat-icon> Vẽ </mat-chip>\r\n                        <mat-chip><mat-icon>headphones</mat-icon> Nghe nhạc </mat-chip>\r\n                      </mat-chip-list>\r\n                    </div>\r\n                  </div>\r\n                </mat-card-content>\r\n              </mat-card>\r\n              <mat-card class=\"Friend\">\r\n                <mat-card-content>\r\n                  <div class=\"row\">\r\n                    <div class=\"col-md-6\">\r\n                      <div class=\"AboutHeader\">\r\n                        Bạn bè\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"col-md-6\">\r\n                      <div style=\"float:right;\" class=\"AboutHeader\">\r\n                        {{countFriend}}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"AboutContent\">\r\n                    <div *ngIf=\"countFriend > 0\">\r\n                      <mat-card class=\"FriendListCard\" *ngFor=\"let friend of getProfileFriend\">\r\n                        <div class=\"\">\r\n                          <img src=\"https://the-social-network1.herokuapp.com/public/upload/{{friend.avatar}}\" routerLink=\"/profile/{{friend.Friend_ID}}\"  mat-card-avatar >\r\n                          <span routerLink=\"/profile/{{friend.Friend_ID}}\" >{{friend.name}}</span>\r\n                        </div>\r\n                      </mat-card>\r\n                    </div>\r\n                  </div>\r\n                </mat-card-content>\r\n              </mat-card>\r\n            </div>\r\n            <div class=\"col-lg-7\">\r\n              <div class=\"StatusPost\">\r\n                <!--Status Post-->\r\n              <mat-accordion *ngIf=\"_auth.loggedIn()\" multi>\r\n                <mat-expansion-panel>\r\n                  <mat-expansion-panel-header>\r\n                    Chào {{userProfile.name}}, ngày hôm nay của bạn thế nào?\r\n                  </mat-expansion-panel-header>\r\n                  <mat-tab-group mat-align-tabs=\"center\">\r\n                    <mat-tab label=\"Đăng bài viết\">\r\n                      <form class=\"form-group\">\r\n                        <img src=\"https://the-social-network1.herokuapp.com/public/upload/{{userProfile.avatar}} \" mat-card-avatar >\r\n                        <mat-form-field class=\"full-width\" appearance=\"outline\" style=\"margin-top:10px;margin-left:10px;width:80%\">\r\n                          <mat-label>Bạn muốn chia sẻ điều gì?</mat-label>\r\n                            <textarea\r\n                                class=\"CreatePost\"\r\n                                matInput\r\n                                name=\"content\"\r\n                                placeholder=\"Bạn muốn chia sẻ điều gì?\"\r\n                                [(ngModel)]=\"postNoImage.content\" rows=\"2\" cols=\"80\">\r\n                            </textarea>\r\n                        </mat-form-field>\r\n                        <a mat-raised-button class=\"UploadImages\"></a>\r\n                        <br />\r\n                        <button mat-flat-button class=\"submitPostBtn\" (click)=\"PostNoImage()\"> Chia sẻ </button>\r\n                      </form>\r\n                    </mat-tab>\r\n\r\n                    <mat-tab label=\"Đăng ảnh\">\r\n                      <form (ngSubmit)=\"onAddNewPost()\" name=\"PostForm\" [formGroup]=\"PostForm\">\r\n                        <img src=\"https://the-social-network1.herokuapp.com/public/upload/{{userProfile.avatar}} \" mat-card-avatar >\r\n                        <mat-form-field class=\"full-width\" appearance=\"outline\" style=\"margin-top:10px;margin-left:10px;width:75%\">\r\n                          <mat-label>Bạn muốn chia sẻ điều gì?</mat-label>\r\n                            <textarea\r\n                              class=\"CreatePost\"\r\n                              formControlName=\"content\"\r\n                              matInput\r\n                              placeholder=\"Bạn muốn chia sẻ điều gì?\">\r\n                            </textarea>\r\n                        </mat-form-field>\r\n                        <a mat-raised-button class=\"UploadImages\">\r\n                          <label mat-button for=\"UploadImages\" ><mat-icon style=\"margin: 5px 5px; size:50px 50px; \" >image</mat-icon></label>\r\n                          <input\r\n                            id=\"UploadImages\" type=\"file\" (change)= \"UploadImages($event)\" hidden=true;\r\n                          />\r\n                        </a>\r\n                        <br />\r\n                        <button mat-flat-button type=\"submit\" [disabled]=\"!PostForm.valid\" class=\"submitPostBtn\"> Chia sẻ </button>\r\n                      </form>\r\n                    </mat-tab>\r\n                  </mat-tab-group>\r\n                </mat-expansion-panel>\r\n              </mat-accordion>\r\n\r\n              </div>\r\n              <!-- POST -->\r\n              <div class=\"Post\" *ngFor=\"let post of getPost\">\r\n                <mat-card class=\"example-card\">\r\n                <mat-card-header>\r\n                  <img mat-card-avatar class=\"example-header-image\" src=\"https://the-social-network1.herokuapp.com/public/upload/{{post.UserAvatar}}\"/>\r\n                  <mat-card-title>{{post.UserName}}</mat-card-title>\r\n                  <mat-card-subtitle>{{post.date}}</mat-card-subtitle>\r\n                  <button *ngIf=\"_auth.loggedIn()\" mat-button (click)=\"DeletePost(post.Post_ID)\" class=\"DeleteBtn\">X</button>\r\n                </mat-card-header>\r\n                <mat-card-content>\r\n                  <textarea autosize name=\"name\" class=\"textAreaPost\" disabled>{{post.content}}</textarea>\r\n                </mat-card-content>\r\n                <img mat-card-image *ngIf=\"post.images != null\" src=\"https://the-social-network1.herokuapp.com/public/upload/{{post.images}}\" >\r\n                <mat-card-actions *ngIf=\"_auth.loggedIn()\">\r\n                  <div class=\"PostLayoutLikeCount\">\r\n                    <mat-icon>favorite</mat-icon>{{post.like}}\r\n                    <mat-icon>comment</mat-icon>\r\n                  </div>\r\n                  <button mat-button style=\"color:green\" *ngIf=\"post.isLiked\" (click)=\"unLikePost(post)\">Thích</button>\r\n                  <button mat-button *ngIf=\"!post.isLiked\" (click)=\"LikePost(post)\">Thích</button>\r\n\r\n                  <button mat-button (click)=\"openComment = !openComment\">Bình luận</button>\r\n                </mat-card-actions>\r\n                <mat-card-actions>\r\n                <div class=\"comment\" [hidden] = false>\r\n                  <div class=\"comment\" *ngFor = \"let comment of post.Comments\" style=\"padding: 10px 10px; margin-top:10px; margin-bottom:10px;  \">\r\n                    <div class=\"row\">\r\n                      <div class=\"col-sm-1\">\r\n                        <img mat-card-avatar src=\"https://the-social-network1.herokuapp.com/public/upload/{{comment.avatar}}\">\r\n                      </div>\r\n                      <div class=\"col-sm-11\">\r\n                        <div class=\"rightCommentLayout\">\r\n                          <div class=\"rightTopCommentLayout\">\r\n                            <span style=\"font-size: 20px;font-weight: normal; padding: 10px 10px; margin-top:10px; margin-bottom:10px;\">{{comment.UserName}}</span><br>\r\n                          </div>\r\n                          <div class=\"rightBottomCommentLayout\">\r\n                            <span style=\"font-size: 13px;font-weight: normal; padding: 0px 10px; margin-top:0px; margin-bottom:10px;\">{{comment.content}}</span>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <form (ngSubmit)=\"onAddNewComment(post.Post_ID)\" name=\"CommentForm\" [formGroup]=\"CommentForm\" *ngIf=\"_auth.loggedIn()\">\r\n                    <img src=\"https://the-social-network1.herokuapp.com/public/upload/{{userProfile.avatar}} \" mat-card-avatar >\r\n                    <mat-form-field class=\"full-width\" style=\"margin-left:10px; margin-right:10px; width:65%\" >\r\n                      <mat-label>Để lại bình luận...</mat-label>\r\n                      <input matInput placeholder=\"Đợi chút, bức ảnh này...\" class=\"full-width\" formControlName=\"content\"/>\r\n                    </mat-form-field>\r\n                    <button mat-flat-button type=\"submit\" [disabled]=\"!CommentForm.valid\" class=\"commentSubmitBtn\"> Chia sẻ </button>\r\n                  </form>\r\n                </div>\r\n                </mat-card-actions>\r\n                <mat-card-footer>\r\n\r\n                </mat-card-footer>\r\n              </mat-card>\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </mat-tab>\r\n      <mat-tab label=\"Giới thiệu\">\r\n        <div class=\"container\">\r\n          <mat-card class=\"Introduction\">\r\n            <mat-card-content>\r\n              <h2>Giới thiệu</h2>\r\n              <!-- TODO: Sua thong tin ca nhan -->\r\n              <div class=\"HeadingDisplayProfile\">\r\n                <span><mat-icon>person</mat-icon> Thông tin cá nhân</span>\r\n              </div>\r\n              <div class=\"ContentDisplayProfile\">\r\n                <div class=\"ContentElement row\">\r\n                  <p class=\"LeftContentElement col-md-2\">Tên</p><br>\r\n                  <p class=\"MidContentElement col-md-8\" *ngIf=\"!editName\">{{userProfile.name}}</p><br>\r\n                  <form class=\"form col-md-8\" *ngIf=\"editName\">\r\n                    <div class=\"form-group\">\r\n                        <input class=\"form-control EditIntroduction\" type=\"text\" name=\"name\" placeholder=\"{{userProfile.name}}\" value=\"{{userProfile.name}}\" [(ngModel)]=\"editProfile.name\">\r\n                    </div>\r\n                    <button mat-flat-button class=\"submitPostBtn\" style=\"width:5%; margin:10px 10px;\" (click)=\"EditName()\"> Lưu </button>\r\n                    <button mat-stroked-button style=\"width:5%; margin:10px 10px;\" (click)=\"editName = !editName\"> Hủy </button>\r\n                  </form>\r\n                  <span class=\"RightContentElement col-md-2\" *ngIf=\"!editName && _auth.loggedIn() && checkPermission\"><mat-icon style=\"color:green; margin-left:10px;\" (click) = \"editName = !editName\">border_color</mat-icon></span><br>\r\n                </div>\r\n                <div class=\"ContentElement row\">\r\n                  <span class=\"LeftContentElement col-md-2\">Giới tính</span><br>\r\n                  <span class=\"MidContentElement col-md-8\" *ngIf=\"!editGender\">{{userProfile.gender}}</span><br>\r\n                  <form class=\"form col-md-8\" *ngIf=\"editGender\">\r\n                    <mat-form-field appearance=\"fill\" >\r\n                      <mat-label>Giới tính</mat-label>\r\n                      <mat-select disableRipple [(ngModel)]=\"editProfile.gender\" name=\"gender\">\r\n                        <mat-option value=\"Nam\">Nam</mat-option>\r\n                        <mat-option value=\"Nữ\">Nữ</mat-option>\r\n                        <mat-option value=\"Không rõ\">Không rõ</mat-option>\r\n                      </mat-select>\r\n                    </mat-form-field>\r\n                    <button mat-flat-button class=\"submitPostBtn\" style=\"width:5%; margin:10px 10px;\" (click)=\"EditGender()\"> Lưu </button>\r\n                    <button mat-stroked-button style=\"width:5%; margin:10px 10px;\" (click)=\"editGender = !editGender\"> Hủy </button>\r\n                  </form>\r\n                  <span class=\"RightContentElement col-md-2\" *ngIf=\"!editGender  && _auth.loggedIn() && checkPermission\"><mat-icon style=\"color:green; margin-left:10px;\" (click) = \"editGender = !editGender\">border_color</mat-icon></span><br>\r\n                </div>\r\n                <div class=\"LastContentElement row\">\r\n                  <span class=\"LeftContentElement col-md-2\">Ngày sinh</span><br>\r\n                  <span class=\"MidContentElement col-md-8\" *ngIf=\"!editDoB\">{{userProfile.DoB}}</span><br>\r\n                  <form class=\"form col-md-8\" *ngIf=\"editDoB\">\r\n                    <div class=\"form-group\">\r\n                      <mat-form-field class=\"col-md-8\" appearance=\"fill\">\r\n                        <mat-label>Chọn ngày sinh của bạn</mat-label>\r\n                        <input matInput [matDatepicker]=\"picker1\" [formControl]=\"date\">\r\n                        <mat-datepicker-toggle matSuffix [for]=\"picker1\"></mat-datepicker-toggle>\r\n                        <mat-datepicker #picker1></mat-datepicker>\r\n                      </mat-form-field>\r\n                    </div>\r\n                    <button mat-flat-button class=\"submitPostBtn\" style=\"width:5%; margin:10px 10px;\" (click)=\"EditDoB()\"> Lưu </button>\r\n                    <button mat-stroked-button style=\"width:5%; margin:10px 10px;\" (click)=\"editDoB = !editDoB\"> Hủy </button>\r\n                  </form>\r\n                  <span class=\"RightContentElement col-md-2\" *ngIf=\"!editDoB && _auth.loggedIn() && checkPermission\"><mat-icon style=\"color:green; margin-left:10px;\" (click) = \"editDoB = !editDoB\">border_color</mat-icon></span><br>\r\n                </div>\r\n              </div>\r\n              <div class=\"HeadingDisplayProfile\">\r\n                <span><mat-icon>call</mat-icon>Thông tin liên hệ</span><br>\r\n              </div>\r\n              <div class=\"ContentDisplayProfile\">\r\n                <div class=\"ContentElement row\">\r\n                  <span class=\"LeftContentElement col-md-2\">Địa chỉ</span><br>\r\n                  <span class=\"MidContentElement col-md-8\" *ngIf=\"!editAddress\">{{userProfile.address}}</span><br>\r\n                  <form class=\"form col-md-8\" *ngIf=\"editAddress\">\r\n                    <div class=\"form-group\">\r\n                        <input class=\"form-control EditIntroduction\" type=\"text\" name=\"address\" placeholder=\"{{userProfile.address}}\" value=\"{{userProfile.address}}\" [(ngModel)]=\"editProfile.address\">\r\n                    </div>\r\n                    <button mat-flat-button class=\"submitPostBtn\" style=\"width:5%; margin:10px 10px;\" (click)=\"EditAddress()\"> Lưu </button>\r\n                    <button mat-stroked-button style=\"width:5%; margin:10px 10px;\" (click)=\"editAddress = !editAddress\"> Hủy </button>\r\n                  </form>\r\n                  <span class=\"RightContentElement col-md-2\" *ngIf=\"!editAddress  && _auth.loggedIn() && checkPermission\"><mat-icon style=\"color:green; margin-left:10px;\" (click) = \"editAddress = !editAddress\">border_color</mat-icon></span><br>\r\n                </div>\r\n                <div class=\"LastContentElement row\">\r\n                  <span class=\"LeftContentElement col-md-2\">Số điện thoại</span><br>\r\n                  <span class=\"MidContentElement col-md-8\" *ngIf=\"!editPhone\">{{userProfile.phone}}</span><br>\r\n                  <form class=\"form col-md-8\" *ngIf=\"editPhone\">\r\n                    <div class=\"form-group\">\r\n                        <input class=\"form-control EditIntroduction\" type=\"text\" name=\"phone\" placeholder=\"{{userProfile.phone}}\" value=\"{{userProfile.phone}}\" [(ngModel)]=\"editProfile.phone\">\r\n                    </div>\r\n                    <button mat-flat-button class=\"submitPostBtn\" style=\"width:5%; margin:10px 10px;\" (click)=\"EditPhone()\"> Lưu </button>\r\n                    <button mat-stroked-button style=\"width:5%; margin:10px 10px;\" (click)=\"editPhone = !editPhone\"> Hủy </button>\r\n                  </form>\r\n                  <span class=\"RightContentElement col-md-2\" *ngIf=\"!editPhone  && _auth.loggedIn() && checkPermission\"><mat-icon style=\"color:green; margin-left:10px;\" (click) = \"editPhone = !editPhone\">border_color</mat-icon></span><br>\r\n                </div>\r\n              </div>\r\n            </mat-card-content>\r\n          </mat-card>\r\n        </div>\r\n      </mat-tab>\r\n      <mat-tab label=\"Bạn bè\">\r\n\r\n        <div *ngIf=\"countFriend > 0\">\r\n          <mat-card class=\"FriendListCard\" *ngFor=\"let friend of getProfileFriend\">\r\n            <div class=\"\">\r\n              <img src=\"https://the-social-network1.herokuapp.com/public/upload/{{friend.avatar}}\" routerLink=\"/profile/{{friend.Friend_ID}}\"  mat-card-avatar >\r\n              <span routerLink=\"/profile/{{friend.Friend_ID}}\" >{{friend.name}}</span>\r\n              <button mat-button style=\"float: right;\" (click)=\"UnFriend(friend.Friend_ID)\" *ngIf=\"_auth.loggedIn() && checkPermission\"><mat-icon>clear</mat-icon></button>\r\n            </div>\r\n          </mat-card>\r\n        </div>\r\n\r\n      </mat-tab>\r\n    </mat-tab-group>\r\n\r\n\r\n\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http'\r\n\r\nimport { AuthGuard } from \"./Guard/auth.guard\";\r\n\r\nimport { MatSidenavModule  } from '@angular/material/sidenav';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { ReactiveFormsModule } from \"@angular/forms\";\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { TextareaAutosizeModule } from 'ngx-textarea-autosize';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\n\r\nimport { HomeComponent } from './Pages/home/home.component';\r\nimport { LoginComponent } from './Pages/login/login.component';\r\nimport { RegisterComponent } from './Pages/register/register.component';\r\nimport { ForgotPasswordComponent } from './Pages/forgot-password/forgot-password.component';\r\nimport { ResetConfirmComponent } from './Pages/reset-confirm/reset-confirm.component';\r\nimport { ProfileComponent } from './Pages/profile/profile.component';\r\nimport { AboutComponent } from './Pages/about/about.component';\r\nimport { FriendComponent } from './Pages/friend/friend.component';\r\nimport { NewsComponent } from './Pages/news/news.component';\r\nimport { ChatComponent } from './Pages/chat/chat.component';\r\nimport { EditProfileComponent } from './Pages/edit-profile/edit-profile.component';\r\nimport { SearchComponent } from './Pages/search/search.component';\r\nimport { ChatRoomComponent } from './Pages/chat-room/chat-room.component';\r\n\r\n\r\nlet angularMaterialModule = [\r\n  MatSidenavModule,\r\n  MatToolbarModule,\r\n  MatIconModule,\r\n  MatListModule,\r\n  MatButtonModule,\r\n  MatCardModule,\r\n  MatInputModule,\r\n  MatFormFieldModule,\r\n  ReactiveFormsModule,\r\n  MatDialogModule,\r\n  MatExpansionModule,\r\n  MatDatepickerModule,\r\n  MatTabsModule,\r\n  MatPaginatorModule,\r\n  MatTooltipModule,\r\n  MatButtonToggleModule,\r\n  MatChipsModule,\r\n  MatTableModule,\r\n  MatNativeDateModule,\r\n  MatSelectModule,\r\n  MatAutocompleteModule\r\n];\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path:'login',\r\n    component: LoginComponent\r\n  },\r\n  {\r\n    path:'register',\r\n    component: RegisterComponent\r\n  },\r\n  {\r\n    path:'forgot-password',\r\n    component: ForgotPasswordComponent\r\n  },\r\n  {\r\n    path:'reset-confirm/:token',\r\n    component: ResetConfirmComponent\r\n  },\r\n  {\r\n    path:'profile/:userId',\r\n    component: ProfileComponent\r\n  },\r\n  {\r\n    path:'about',\r\n    component: AboutComponent\r\n  },\r\n  {\r\n    path:'friend',\r\n    component: FriendComponent\r\n  },\r\n  {\r\n    path:'search',\r\n    component: SearchComponent\r\n  },\r\n  {\r\n    path:'chat/:friendId',\r\n    component: ChatComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path:'news',\r\n    component: NewsComponent\r\n  },\r\n  {\r\n    path:'setting',\r\n    component: EditProfileComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path:'chat-room',\r\n    component: ChatRoomComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path:'**',\r\n    component: HomeComponent,\r\n    canActivate: [AuthGuard]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    HomeComponent,\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    ForgotPasswordComponent,\r\n    ResetConfirmComponent,\r\n    ProfileComponent,\r\n    AboutComponent,\r\n    FriendComponent,\r\n    NewsComponent,\r\n    ChatComponent,\r\n    SearchComponent,\r\n    EditProfileComponent,\r\n    ChatRoomComponent\r\n  ],\r\n  imports: [\r\n    RouterModule.forRoot(routes),\r\n    FormsModule,\r\n    CommonModule,\r\n    HttpClientModule,\r\n    TextareaAutosizeModule,\r\n    angularMaterialModule\r\n  ],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-friend',\n  templateUrl: './friend.component.html',\n  styleUrls: ['./friend.component.css']\n})\nexport class FriendComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>friend works!</p>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from \"@angular/router\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NewsService {\n\n  readonly _checkAdminUrl = \"https://the-social-network1.herokuapp.com/api/News/CheckAdmin\"\n  readonly _AddNewNewsUrl = \"https://the-social-network1.herokuapp.com/api/News/new\"\n  readonly _AddNewNewsNoImageUrl = \"https://the-social-network1.herokuapp.com/api/News/new/newsNoImage\"\n  readonly _getAllNewsUrl = \"https://the-social-network1.herokuapp.com/api/News/getAllNews\"\n\n  constructor(\n    private http: HttpClient,\n    private _router: Router\n  ) { }\n\n  CheckAdmin(){\n    return this.http.get<any>(this._checkAdminUrl)\n  }\n\n  AddNewNews(post:any){\n    return this.http.post<any>(this._AddNewNewsUrl, post)\n  }\n\n  AddNewNewsNoImage(post:any){\n    return this.http.post<any>(this._AddNewNewsNoImageUrl, post)\n  }\n\n  getAllNews(){\n    return this.http.get<any>(this._getAllNewsUrl)\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from \"@angular/router\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChatService {\n\n  readonly _getChatForClient = \"https://the-social-network1.herokuapp.com/api/Chat/\";\n\n  constructor(\n    private http: HttpClient,\n    private _router: Router\n  ) { }\n\n  GetChatForClient(userId:any){\n    return this.http.get<any>(this._getChatForClient + userId)\n  }\n\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}